///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ChangePassword recording.
    /// </summary>
    [TestModule("a74315e8-048a-4092-baa0-4fabe7c3d423", ModuleType.Recording, 1)]
    public partial class ChangePassword : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static ChangePassword instance = new ChangePassword();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ChangePassword()
        {
            OldPassword = "test";
            NewPassword = "Test";
            ConfirmNewPassword = "Test";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ChangePassword Instance
        {
            get { return instance; }
        }

#region Variables

        string _OldPassword;

        /// <summary>
        /// Gets or sets the value of variable OldPassword.
        /// </summary>
        [TestVariable("f36a1c3f-1b1c-4da1-8779-e39101fcbd34")]
        public string OldPassword
        {
            get { return _OldPassword; }
            set { _OldPassword = value; }
        }

        string _NewPassword;

        /// <summary>
        /// Gets or sets the value of variable NewPassword.
        /// </summary>
        [TestVariable("528cc0d3-66f9-4644-8d58-f277b88ce1c5")]
        public string NewPassword
        {
            get { return _NewPassword; }
            set { _NewPassword = value; }
        }

        string _ConfirmNewPassword;

        /// <summary>
        /// Gets or sets the value of variable ConfirmNewPassword.
        /// </summary>
        [TestVariable("758b386a-b619-4135-8e9a-6bd546726c93")]
        public string ConfirmNewPassword
        {
            get { return _ConfirmNewPassword; }
            set { _ConfirmNewPassword = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable RepoURL.
        /// </summary>
        [TestVariable("c75816bd-3150-4b49-aa6d-f8479454f515")]
        public string RepoURL
        {
            get { return repo.RepoURL; }
            set { repo.RepoURL = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ChangePassword' at 56;19.", repo.ApplicationUnderTest.ChangePasswordInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.ChangePassword.Click("56;19");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ModalWrapper.OldPassword' at 31;19.", repo.ApplicationUnderTest.ModalWrapper.OldPasswordInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.ModalWrapper.OldPassword.Click("31;19");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OldPassword' with focus on 'ApplicationUnderTest.ModalWrapper.OldPassword'.", repo.ApplicationUnderTest.ModalWrapper.OldPasswordInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.ModalWrapper.OldPassword.PressKeys(OldPassword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ModalWrapper.NewPassword1' at 36;17.", repo.ApplicationUnderTest.ModalWrapper.NewPassword1Info, new RecordItemIndex(3));
            repo.ApplicationUnderTest.ModalWrapper.NewPassword1.Click("36;17");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NewPassword' with focus on 'ApplicationUnderTest.ModalWrapper.NewPassword1'.", repo.ApplicationUnderTest.ModalWrapper.NewPassword1Info, new RecordItemIndex(4));
            repo.ApplicationUnderTest.ModalWrapper.NewPassword1.PressKeys(NewPassword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ModalWrapper.ConfirmNewPassword' at 33;13.", repo.ApplicationUnderTest.ModalWrapper.ConfirmNewPasswordInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.ModalWrapper.ConfirmNewPassword.Click("33;13");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ConfirmNewPassword' with focus on 'ApplicationUnderTest.ModalWrapper.ConfirmNewPassword'.", repo.ApplicationUnderTest.ModalWrapper.ConfirmNewPasswordInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.ModalWrapper.ConfirmNewPassword.PressKeys(ConfirmNewPassword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ModalWrapper.SaveChanges3' at 70;15.", repo.ApplicationUnderTest.ModalWrapper.SaveChanges3Info, new RecordItemIndex(7));
            repo.ApplicationUnderTest.ModalWrapper.SaveChanges3.Click("70;15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(8));
            Delay.Duration(5000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "After changed password screenshot taken", repo.ApplicationUnderTest.Self, false, new RecordItemIndex(9));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
