///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EmployeeTabs recording.
    /// </summary>
    [TestModule("1ba1b34b-98ea-42c4-a969-56dd000ac15e", ModuleType.Recording, 1)]
    public partial class EmployeeTabs : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static EmployeeTabs instance = new EmployeeTabs();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EmployeeTabs()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EmployeeTabs Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable RepoURL.
        /// </summary>
        [TestVariable("c75816bd-3150-4b49-aa6d-f8479454f515")]
        public string RepoURL
        {
            get { return repo.RepoURL; }
            set { repo.RepoURL = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Personal') on item 'ApplicationUnderTest.Personal'.", repo.ApplicationUnderTest.PersonalInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.ApplicationUnderTest.PersonalInfo, "InnerText", "Personal");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.JobPay' at Center.", repo.ApplicationUnderTest.JobPayInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.JobPay.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(2));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Job & Pay') on item 'ApplicationUnderTest.JobPay'.", repo.ApplicationUnderTest.JobPayInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.ApplicationUnderTest.JobPayInfo, "InnerText", "Job & Pay");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Earnings' at Center.", repo.ApplicationUnderTest.EarningsInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.Earnings.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(5));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Earnings') on item 'ApplicationUnderTest.Earnings'.", repo.ApplicationUnderTest.EarningsInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.ApplicationUnderTest.EarningsInfo, "InnerText", "Earnings");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Deductions' at Center.", repo.ApplicationUnderTest.DeductionsInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.Deductions.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(8));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Deductions') on item 'ApplicationUnderTest.Deductions'.", repo.ApplicationUnderTest.DeductionsInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.ApplicationUnderTest.DeductionsInfo, "InnerText", "Deductions");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DirectDeposit' at Center.", repo.ApplicationUnderTest.DirectDepositInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.DirectDeposit.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(11));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Direct Deposit') on item 'ApplicationUnderTest.DirectDeposit'.", repo.ApplicationUnderTest.DirectDepositInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.ApplicationUnderTest.DirectDepositInfo, "InnerText", "Direct Deposit");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Taxes' at Center.", repo.ApplicationUnderTest.TaxesInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.Taxes.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(14));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Taxes') on item 'ApplicationUnderTest.Taxes'.", repo.ApplicationUnderTest.TaxesInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.ApplicationUnderTest.TaxesInfo, "InnerText", "Taxes");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.PayHistory' at Center.", repo.ApplicationUnderTest.PayHistoryInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.PayHistory.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(17));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Pay History') on item 'ApplicationUnderTest.PayHistory'.", repo.ApplicationUnderTest.PayHistoryInfo, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.ApplicationUnderTest.PayHistoryInfo, "InnerText", "Pay History");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LiTagPTO' at Center.", repo.ApplicationUnderTest.LiTagPTOInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.LiTagPTO.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(20));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='PTO') on item 'ApplicationUnderTest.LiTagPTO'.", repo.ApplicationUnderTest.LiTagPTOInfo, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LiTagPTOInfo, "InnerText", "PTO");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.PTOSetup' at Center.", repo.ApplicationUnderTest.PTOSetupInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.PTOSetup.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(23));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='PTO Setup') on item 'ApplicationUnderTest.PTOSetup'.", repo.ApplicationUnderTest.PTOSetupInfo, new RecordItemIndex(24));
            Validate.AttributeEqual(repo.ApplicationUnderTest.PTOSetupInfo, "InnerText", "PTO Setup");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Documents' at Center.", repo.ApplicationUnderTest.DocumentsInfo, new RecordItemIndex(25));
            repo.ApplicationUnderTest.Documents.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(26));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Documents') on item 'ApplicationUnderTest.Documents'.", repo.ApplicationUnderTest.DocumentsInfo, new RecordItemIndex(27));
            Validate.AttributeEqual(repo.ApplicationUnderTest.DocumentsInfo, "InnerText", "Documents");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Licenses' at Center.", repo.ApplicationUnderTest.LicensesInfo, new RecordItemIndex(28));
            repo.ApplicationUnderTest.Licenses.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(29));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Licenses') on item 'ApplicationUnderTest.Licenses'.", repo.ApplicationUnderTest.LicensesInfo, new RecordItemIndex(30));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LicensesInfo, "InnerText", "Licenses");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.History' at Center.", repo.ApplicationUnderTest.HistoryInfo, new RecordItemIndex(31));
            repo.ApplicationUnderTest.History.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(32));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='History') on item 'ApplicationUnderTest.History'.", repo.ApplicationUnderTest.HistoryInfo, new RecordItemIndex(33));
            Validate.AttributeEqual(repo.ApplicationUnderTest.HistoryInfo, "InnerText", "History");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
