///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AsDeductionCode recording.
    /// </summary>
    [TestModule("f2d3b412-2b3b-4e0c-9dbe-6872884ec682", ModuleType.Recording, 1)]
    public partial class AsDeductionCode : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static AsDeductionCode instance = new AsDeductionCode();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AsDeductionCode()
        {
            DeductionStartDate = "";
            DeductionCode = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AsDeductionCode Instance
        {
            get { return instance; }
        }

#region Variables

        string _DeductionStartDate;

        /// <summary>
        /// Gets or sets the value of variable DeductionStartDate.
        /// </summary>
        [TestVariable("443c181d-65a0-4021-92f9-a7a84b51ba4c")]
        public string DeductionStartDate
        {
            get { return _DeductionStartDate; }
            set { _DeductionStartDate = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DeductionCode.
        /// </summary>
        [TestVariable("4ef0aac5-856e-4ee3-809d-1e9abd61dcd5")]
        public string DeductionCode
        {
            get { return repo.DeductionCode; }
            set { repo.DeductionCode = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DeductionCode' at Center.", repo.ApplicationUnderTest.DeductionCodeInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.DeductionCode.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddDeduction' at Center.", repo.ApplicationUnderTest.AddDeductionInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.AddDeduction.Click();
            Delay.Milliseconds(0);
            
            // In second dialog  Fill out the fields provided. Press Undo Changes
            Report.Log(ReportLevel.Info, "Section", "In second dialog  Fill out the fields provided. Press Undo Changes", new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DeductionStartDate' at Center.", repo.ApplicationUnderTest.DeductionStartDateInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.DeductionStartDate.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Placeholder' from item 'ApplicationUnderTest.DeductionStartDate' and assigning its value to variable 'DeductionStartDate'.", repo.ApplicationUnderTest.DeductionStartDateInfo, new RecordItemIndex(4));
            DeductionStartDate = repo.ApplicationUnderTest.DeductionStartDate.Element.GetAttributeValueText("Placeholder");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '08042021' with focus on 'ApplicationUnderTest.DeductionStartDate'.", repo.ApplicationUnderTest.DeductionStartDateInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.DeductionStartDate.PressKeys("08042021");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DeductionAddUndoChanges' at Center.", repo.DeductionAddUndoChangesInfo, new RecordItemIndex(6));
            repo.DeductionAddUndoChanges.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Placeholder=$DeductionStartDate) on item 'ApplicationUnderTest.DeductionStartDate'.", repo.ApplicationUnderTest.DeductionStartDateInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.ApplicationUnderTest.DeductionStartDateInfo, "Placeholder", DeductionStartDate);
            Delay.Milliseconds(100);
            
            // Fill out the fields provided. Select a file to upload. Press Save Deduction
            Report.Log(ReportLevel.Info, "Section", "Fill out the fields provided. Select a file to upload. Press Save Deduction", new RecordItemIndex(8));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DeductionStartDate' at Center.", repo.ApplicationUnderTest.DeductionStartDateInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.DeductionStartDate.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '08042021' with focus on 'ApplicationUnderTest.DeductionStartDate'.", repo.ApplicationUnderTest.DeductionStartDateInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.DeductionStartDate.PressKeys("08042021");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DeductionStopDate' at Center.", repo.ApplicationUnderTest.DeductionStopDateInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.DeductionStopDate.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '10042021' with focus on 'ApplicationUnderTest.DeductionStopDate'.", repo.ApplicationUnderTest.DeductionStopDateInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.DeductionStopDate.PressKeys("10042021");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EmployeeCalcRule' at Center.", repo.ApplicationUnderTest.EmployeeCalcRuleInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.EmployeeCalcRule.Click();
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'ApplicationUnderTest.EmployeeAmount' at Center.", repo.ApplicationUnderTest.EmployeeAmountInfo, new RecordItemIndex(14));
                repo.ApplicationUnderTest.EmployeeAmount.Click();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(14)); }
            
            try {
                Report.Log(ReportLevel.Info, "Keyboard", "(Optional Action)\r\nKey sequence '12000' with focus on 'ApplicationUnderTest.EmployeeAmount'.", repo.ApplicationUnderTest.EmployeeAmountInfo, new RecordItemIndex(15));
                repo.ApplicationUnderTest.EmployeeAmount.PressKeys("12000");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(15)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DeductionChooseFile' at Center.", repo.DeductionChooseFileInfo, new RecordItemIndex(16));
            repo.DeductionChooseFile.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Open.SystemItemNameDisplay' at Center.", repo.Open.SystemItemNameDisplayInfo, new RecordItemIndex(17));
            repo.Open.SystemItemNameDisplay.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Open.ButtonOpen' at Center.", repo.Open.ButtonOpenInfo, new RecordItemIndex(18));
            repo.Open.ButtonOpen.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DocumentTitle' at Center.", repo.ApplicationUnderTest.DocumentTitleInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.DocumentTitle.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Test Document' with focus on 'ApplicationUnderTest.DocumentTitle'.", repo.ApplicationUnderTest.DocumentTitleInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.DocumentTitle.PressKeys("Test Document");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DocumentDec' at Center.", repo.ApplicationUnderTest.DocumentDecInfo, new RecordItemIndex(21));
            repo.ApplicationUnderTest.DocumentDec.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Des' with focus on 'ApplicationUnderTest.DocumentDec'.", repo.ApplicationUnderTest.DocumentDecInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.DocumentDec.PressKeys("Des");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SaveDeductionbtn' at Center.", repo.ApplicationUnderTest.SaveDeductionbtnInfo, new RecordItemIndex(23));
            repo.ApplicationUnderTest.SaveDeductionbtn.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(24));
            Delay.Duration(5000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "Screenshot Taken", repo.ApplicationUnderTest.Self, false, new RecordItemIndex(25));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
