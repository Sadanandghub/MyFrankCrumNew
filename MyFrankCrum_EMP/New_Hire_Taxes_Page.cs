///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The New_Hire_Taxes_Page recording.
    /// </summary>
    [TestModule("70ae1cf2-26bc-434e-b6fc-38f3492f5f2c", ModuleType.Recording, 1)]
    public partial class New_Hire_Taxes_Page : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static New_Hire_Taxes_Page instance = new New_Hire_Taxes_Page();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public New_Hire_Taxes_Page()
        {
            FillingStatus = "Married Filing Jointly";
            ChildrenAmount = "10000";
            OtherDependentsAmount = "1000";
            OtherIncome = "1";
            AdditionalDeductions = "1";
            WithholdingAmt = "1";
            AllowancesExemptions = "2345";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static New_Hire_Taxes_Page Instance
        {
            get { return instance; }
        }

#region Variables

        string _FillingStatus;

        /// <summary>
        /// Gets or sets the value of variable FillingStatus.
        /// </summary>
        [TestVariable("c0dfb071-6c9d-445c-984c-a4e154222afa")]
        public string FillingStatus
        {
            get { return _FillingStatus; }
            set { _FillingStatus = value; }
        }

        string _ChildrenAmount;

        /// <summary>
        /// Gets or sets the value of variable ChildrenAmount.
        /// </summary>
        [TestVariable("0f933f7b-cdc4-4e2e-aef0-afbd7905982a")]
        public string ChildrenAmount
        {
            get { return _ChildrenAmount; }
            set { _ChildrenAmount = value; }
        }

        string _OtherDependentsAmount;

        /// <summary>
        /// Gets or sets the value of variable OtherDependentsAmount.
        /// </summary>
        [TestVariable("6a4fb91e-4f26-4760-bb9a-bfa9ead99c83")]
        public string OtherDependentsAmount
        {
            get { return _OtherDependentsAmount; }
            set { _OtherDependentsAmount = value; }
        }

        string _OtherIncome;

        /// <summary>
        /// Gets or sets the value of variable OtherIncome.
        /// </summary>
        [TestVariable("d7a1967c-6cd6-4dac-b1ee-644e7ce30c96")]
        public string OtherIncome
        {
            get { return _OtherIncome; }
            set { _OtherIncome = value; }
        }

        string _AdditionalDeductions;

        /// <summary>
        /// Gets or sets the value of variable AdditionalDeductions.
        /// </summary>
        [TestVariable("b63f7bbb-01a5-4ee0-9177-5af8042cf87e")]
        public string AdditionalDeductions
        {
            get { return _AdditionalDeductions; }
            set { _AdditionalDeductions = value; }
        }

        string _WithholdingAmt;

        /// <summary>
        /// Gets or sets the value of variable WithholdingAmt.
        /// </summary>
        [TestVariable("0c5d8b6b-4be9-4810-890a-1273c0fae696")]
        public string WithholdingAmt
        {
            get { return _WithholdingAmt; }
            set { _WithholdingAmt = value; }
        }

        string _AllowancesExemptions;

        /// <summary>
        /// Gets or sets the value of variable AllowancesExemptions.
        /// </summary>
        [TestVariable("f1303306-3e3d-470a-b6e6-87c25ac58722")]
        public string AllowancesExemptions
        {
            get { return _AllowancesExemptions; }
            set { _AllowancesExemptions = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable RepoURL.
        /// </summary>
        [TestVariable("c75816bd-3150-4b49-aa6d-f8479454f515")]
        public string RepoURL
        {
            get { return repo.RepoURL; }
            set { repo.RepoURL = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "User", "Taxes started", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FillingStatus' at Center.", repo.ApplicationUnderTest.FillingStatusInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.FillingStatus.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FillingStatus' with focus on 'ApplicationUnderTest.FillingStatus'.", repo.ApplicationUnderTest.FillingStatusInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.FillingStatus.EnsureVisible();
            Keyboard.Press(FillingStatus);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.FillingStatus'.", repo.ApplicationUnderTest.FillingStatusInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.FillingStatus.EnsureVisible();
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AllowancesExemptions' at 19;25.", repo.ApplicationUnderTest.AllowancesExemptionsInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.AllowancesExemptions.Click("19;25");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AllowancesExemptions' with focus on 'ApplicationUnderTest.AllowancesExemptions'.", repo.ApplicationUnderTest.AllowancesExemptionsInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.AllowancesExemptions.PressKeys(AllowancesExemptions);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ChildrenAmount' at Center.", repo.ApplicationUnderTest.ChildrenAmountInfo, new RecordItemIndex(6));
            //repo.ApplicationUnderTest.ChildrenAmount.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ChildrenAmount' with focus on 'ApplicationUnderTest.ChildrenAmount'.", repo.ApplicationUnderTest.ChildrenAmountInfo, new RecordItemIndex(7));
            //repo.ApplicationUnderTest.ChildrenAmount.PressKeys(ChildrenAmount);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.OtherDependentsAmount' at Center.", repo.ApplicationUnderTest.OtherDependentsAmountInfo, new RecordItemIndex(8));
            //repo.ApplicationUnderTest.OtherDependentsAmount.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OtherDependentsAmount' with focus on 'ApplicationUnderTest.OtherDependentsAmount'.", repo.ApplicationUnderTest.OtherDependentsAmountInfo, new RecordItemIndex(9));
            //repo.ApplicationUnderTest.OtherDependentsAmount.PressKeys(OtherDependentsAmount);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.OtherIncome' at Center.", repo.ApplicationUnderTest.OtherIncomeInfo, new RecordItemIndex(10));
            //repo.ApplicationUnderTest.OtherIncome.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OtherIncome' with focus on 'ApplicationUnderTest.OtherIncome'.", repo.ApplicationUnderTest.OtherIncomeInfo, new RecordItemIndex(11));
            //repo.ApplicationUnderTest.OtherIncome.PressKeys(OtherIncome);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AdditionalDeductions' at Center.", repo.ApplicationUnderTest.AdditionalDeductionsInfo, new RecordItemIndex(12));
            //repo.ApplicationUnderTest.AdditionalDeductions.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AdditionalDeductions' with focus on 'ApplicationUnderTest.AdditionalDeductions'.", repo.ApplicationUnderTest.AdditionalDeductionsInfo, new RecordItemIndex(13));
            //repo.ApplicationUnderTest.AdditionalDeductions.PressKeys(AdditionalDeductions);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.WithholdingAmt' at Center.", repo.ApplicationUnderTest.WithholdingAmtInfo, new RecordItemIndex(14));
            //repo.ApplicationUnderTest.WithholdingAmt.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$WithholdingAmt' with focus on 'ApplicationUnderTest.WithholdingAmt'.", repo.ApplicationUnderTest.WithholdingAmtInfo, new RecordItemIndex(15));
            //repo.ApplicationUnderTest.WithholdingAmt.PressKeys(WithholdingAmt);
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'ApplicationUnderTest.TaxesNext'.", repo.ApplicationUnderTest.TaxesNextInfo, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.ApplicationUnderTest.TaxesNextInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Mouse_Click_DeductionNext(repo.ApplicationUnderTest.TaxesNextInfo);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TaxesNext' at Center.", repo.ApplicationUnderTest.TaxesNextInfo, new RecordItemIndex(18));
            //repo.ApplicationUnderTest.TaxesNext.Click();
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'ApplicationUnderTest.LiTag6DirectDepositAccounts'.", repo.ApplicationUnderTest.LiTag6DirectDepositAccountsInfo, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LiTag6DirectDepositAccountsInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
