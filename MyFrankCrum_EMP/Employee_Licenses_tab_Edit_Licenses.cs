///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Employee_Licenses_tab_Edit_Licenses recording.
    /// </summary>
    [TestModule("83b62d76-93c9-4bd5-8282-5a29057960b8", ModuleType.Recording, 1)]
    public partial class Employee_Licenses_tab_Edit_Licenses : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static Employee_Licenses_tab_Edit_Licenses instance = new Employee_Licenses_tab_Edit_Licenses();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Employee_Licenses_tab_Edit_Licenses()
        {
            GetLicenseNumber = "";
            EditLicenseNumber = "12345678";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Employee_Licenses_tab_Edit_Licenses Instance
        {
            get { return instance; }
        }

#region Variables

        string _GetLicenseNumber;

        /// <summary>
        /// Gets or sets the value of variable GetLicenseNumber.
        /// </summary>
        [TestVariable("74047d6d-4fc3-4e6d-a9f5-e5ec9c5b69bf")]
        public string GetLicenseNumber
        {
            get { return _GetLicenseNumber; }
            set { _GetLicenseNumber = value; }
        }

        string _EditLicenseNumber;

        /// <summary>
        /// Gets or sets the value of variable EditLicenseNumber.
        /// </summary>
        [TestVariable("fc6e4847-cbf1-44df-be57-957dba1739bc")]
        public string EditLicenseNumber
        {
            get { return _EditLicenseNumber; }
            set { _EditLicenseNumber = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable RepoURL.
        /// </summary>
        [TestVariable("c75816bd-3150-4b49-aa6d-f8479454f515")]
        public string RepoURL
        {
            get { return repo.RepoURL; }
            set { repo.RepoURL = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Licenses' at Center.", repo.ApplicationUnderTest.LicensesInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.Licenses.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(1));
            Delay.Duration(5000, false);
            
            // Click the Edit License menu option on the right side of the license row
            Report.Log(ReportLevel.Info, "Section", "Click the Edit License menu option on the right side of the license row", new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.PTODropdownMenuButton' at Center.", repo.ApplicationUnderTest.PTODropdownMenuButtonInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.PTODropdownMenuButton.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LicensesEditLicense' at Center.", repo.ApplicationUnderTest.LicensesEditLicenseInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.LicensesEditLicense.Click();
            Delay.Milliseconds(0);
            
            // Make changes to the license data but DON'T press Save Changes | Press Undo Changes
            Report.Log(ReportLevel.Info, "Section", "Make changes to the license data but DON'T press Save Changes | Press Undo Changes", new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LicenseNumber' at Center.", repo.ApplicationUnderTest.LicenseNumberInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.LicenseNumber.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.LicenseNumber' and assigning its value to variable 'GetLicenseNumber'.", repo.ApplicationUnderTest.LicenseNumberInfo, new RecordItemIndex(7));
            GetLicenseNumber = repo.ApplicationUnderTest.LicenseNumber.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$EditLicenseNumber' on item 'ApplicationUnderTest.LicenseNumber'.", repo.ApplicationUnderTest.LicenseNumberInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.LicenseNumber.Element.SetAttributeValue("Value", EditLicenseNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LicenseNotesLable' at Center.", repo.ApplicationUnderTest.LicenseNotesLableInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.LicenseNotesLable.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LicenseUndoChanges' at Center.", repo.ApplicationUnderTest.LicenseUndoChangesInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.LicenseUndoChanges.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value=$GetLicenseNumber) on item 'ApplicationUnderTest.LicenseNumber'.", repo.ApplicationUnderTest.LicenseNumberInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LicenseNumberInfo, "Value", GetLicenseNumber);
            Delay.Milliseconds(100);
            
            // Make changes to the license data and press Save Changes
            Report.Log(ReportLevel.Info, "Section", "Make changes to the license data and press Save Changes", new RecordItemIndex(12));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LicenseNumber' at Center.", repo.ApplicationUnderTest.LicenseNumberInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.LicenseNumber.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$EditLicenseNumber' on item 'ApplicationUnderTest.LicenseNumber'.", repo.ApplicationUnderTest.LicenseNumberInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.LicenseNumber.Element.SetAttributeValue("Value", EditLicenseNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LicensesSaveChanges' at Center.", repo.ApplicationUnderTest.LicensesSaveChangesInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.LicensesSaveChanges.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(16));
            Delay.Duration(3000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "Screenshot Taken", repo.ApplicationUnderTest.Self, false, new RecordItemIndex(17));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
