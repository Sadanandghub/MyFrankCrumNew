///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Myinfo_Contact_Add recording.
    /// </summary>
    [TestModule("d7105f4c-e4fc-4fd0-8d8b-2bd866b0db92", ModuleType.Recording, 1)]
    public partial class Myinfo_Contact_Add : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static Myinfo_Contact_Add instance = new Myinfo_Contact_Add();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Myinfo_Contact_Add()
        {
            ContactSSN = "234565434";
            ContactFirstName = "Sadanand";
            ContactMiddleName = "L";
            ContactLastName = "Gupta";
            ContactFormerName = "Saddu";
            ContactDOB = "07101994";
            ContactMarriageDate = "0711/2019";
            ContactDivorceDate = "07112019";
            ContactAddOne = "Address one";
            ContactAddTwo = "Address two";
            ContactCity = "Florida";
            ContactZip = "2345677654";
            ContactHomePhone = "5678765676";
            ContactWorkPhone = "5674567892";
            ContactWorkExt = "34";
            ContactOtherPhone = "6498765434";
            ContactEmployer = "Sadanand";
            ContactOccupation = "Sales";
            Relationship = "Partner";
            ContactSuffix = "Sr";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Myinfo_Contact_Add Instance
        {
            get { return instance; }
        }

#region Variables

        string _ContactSSN;

        /// <summary>
        /// Gets or sets the value of variable ContactSSN.
        /// </summary>
        [TestVariable("1d3a00cc-094a-47b1-b386-623c5e99595a")]
        public string ContactSSN
        {
            get { return _ContactSSN; }
            set { _ContactSSN = value; }
        }

        string _ContactFirstName;

        /// <summary>
        /// Gets or sets the value of variable ContactFirstName.
        /// </summary>
        [TestVariable("50d49760-f89b-458c-a194-dc140dcb095d")]
        public string ContactFirstName
        {
            get { return _ContactFirstName; }
            set { _ContactFirstName = value; }
        }

        string _ContactMiddleName;

        /// <summary>
        /// Gets or sets the value of variable ContactMiddleName.
        /// </summary>
        [TestVariable("026172f3-519a-4500-b139-34e1b98de4df")]
        public string ContactMiddleName
        {
            get { return _ContactMiddleName; }
            set { _ContactMiddleName = value; }
        }

        string _ContactLastName;

        /// <summary>
        /// Gets or sets the value of variable ContactLastName.
        /// </summary>
        [TestVariable("ab5ce79f-7ae8-4b1c-83c3-342e78638bf5")]
        public string ContactLastName
        {
            get { return _ContactLastName; }
            set { _ContactLastName = value; }
        }

        string _ContactFormerName;

        /// <summary>
        /// Gets or sets the value of variable ContactFormerName.
        /// </summary>
        [TestVariable("5e31a270-20ec-4d6f-9d52-fde24651c42e")]
        public string ContactFormerName
        {
            get { return _ContactFormerName; }
            set { _ContactFormerName = value; }
        }

        string _ContactDOB;

        /// <summary>
        /// Gets or sets the value of variable ContactDOB.
        /// </summary>
        [TestVariable("946e73fe-c639-4708-b643-755aeca9bcd8")]
        public string ContactDOB
        {
            get { return _ContactDOB; }
            set { _ContactDOB = value; }
        }

        string _ContactMarriageDate;

        /// <summary>
        /// Gets or sets the value of variable ContactMarriageDate.
        /// </summary>
        [TestVariable("2c24fb90-f8ba-4367-a65a-ab5bc1feeb63")]
        public string ContactMarriageDate
        {
            get { return _ContactMarriageDate; }
            set { _ContactMarriageDate = value; }
        }

        string _ContactDivorceDate;

        /// <summary>
        /// Gets or sets the value of variable ContactDivorceDate.
        /// </summary>
        [TestVariable("e4de1f63-74de-49ec-ae60-2a92746cc8a8")]
        public string ContactDivorceDate
        {
            get { return _ContactDivorceDate; }
            set { _ContactDivorceDate = value; }
        }

        string _ContactAddOne;

        /// <summary>
        /// Gets or sets the value of variable ContactAddOne.
        /// </summary>
        [TestVariable("17217178-f5ba-42a6-add8-bd3f55c8ab79")]
        public string ContactAddOne
        {
            get { return _ContactAddOne; }
            set { _ContactAddOne = value; }
        }

        string _ContactAddTwo;

        /// <summary>
        /// Gets or sets the value of variable ContactAddTwo.
        /// </summary>
        [TestVariable("6dab0bba-dae5-447b-bd45-ec299ee8bd9e")]
        public string ContactAddTwo
        {
            get { return _ContactAddTwo; }
            set { _ContactAddTwo = value; }
        }

        string _ContactCity;

        /// <summary>
        /// Gets or sets the value of variable ContactCity.
        /// </summary>
        [TestVariable("d7b84e79-b61d-4419-9700-211837b4a3a4")]
        public string ContactCity
        {
            get { return _ContactCity; }
            set { _ContactCity = value; }
        }

        string _ContactZip;

        /// <summary>
        /// Gets or sets the value of variable ContactZip.
        /// </summary>
        [TestVariable("b80b7a71-58ec-4b72-9e30-3de247a5b8fe")]
        public string ContactZip
        {
            get { return _ContactZip; }
            set { _ContactZip = value; }
        }

        string _ContactHomePhone;

        /// <summary>
        /// Gets or sets the value of variable ContactHomePhone.
        /// </summary>
        [TestVariable("cf5d2063-4a97-4d49-8ee8-4511a6041321")]
        public string ContactHomePhone
        {
            get { return _ContactHomePhone; }
            set { _ContactHomePhone = value; }
        }

        string _ContactWorkPhone;

        /// <summary>
        /// Gets or sets the value of variable ContactWorkPhone.
        /// </summary>
        [TestVariable("c97febf5-8823-4683-bf90-6b6f45494abf")]
        public string ContactWorkPhone
        {
            get { return _ContactWorkPhone; }
            set { _ContactWorkPhone = value; }
        }

        string _ContactWorkExt;

        /// <summary>
        /// Gets or sets the value of variable ContactWorkExt.
        /// </summary>
        [TestVariable("7f33514b-ebe8-4a99-8216-c11dd36aab43")]
        public string ContactWorkExt
        {
            get { return _ContactWorkExt; }
            set { _ContactWorkExt = value; }
        }

        string _ContactOtherPhone;

        /// <summary>
        /// Gets or sets the value of variable ContactOtherPhone.
        /// </summary>
        [TestVariable("1c48f743-6612-4109-bf82-dc38dfa20a1c")]
        public string ContactOtherPhone
        {
            get { return _ContactOtherPhone; }
            set { _ContactOtherPhone = value; }
        }

        string _ContactEmployer;

        /// <summary>
        /// Gets or sets the value of variable ContactEmployer.
        /// </summary>
        [TestVariable("e853361c-c4cf-4cb9-951f-b4cd5fccc9a7")]
        public string ContactEmployer
        {
            get { return _ContactEmployer; }
            set { _ContactEmployer = value; }
        }

        string _ContactOccupation;

        /// <summary>
        /// Gets or sets the value of variable ContactOccupation.
        /// </summary>
        [TestVariable("9533d75c-745d-4cf1-808f-8fe57a77bbee")]
        public string ContactOccupation
        {
            get { return _ContactOccupation; }
            set { _ContactOccupation = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable RepoURL.
        /// </summary>
        [TestVariable("c75816bd-3150-4b49-aa6d-f8479454f515")]
        public string RepoURL
        {
            get { return repo.RepoURL; }
            set { repo.RepoURL = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Relationship.
        /// </summary>
        [TestVariable("533e729f-6988-432e-908e-33a4b359e3e2")]
        public string Relationship
        {
            get { return repo.Relationship; }
            set { repo.Relationship = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable ContactSuffix.
        /// </summary>
        [TestVariable("8966e0e5-ac64-467d-aa41-728bdc7dcfc7")]
        public string ContactSuffix
        {
            get { return repo.ContactSuffix; }
            set { repo.ContactSuffix = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable ContactGender.
        /// </summary>
        [TestVariable("8763cbd0-d04c-4da6-9371-b5e9077e63e0")]
        public string ContactGender
        {
            get { return repo.ContactGender; }
            set { repo.ContactGender = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable ContactAddInfo.
        /// </summary>
        [TestVariable("f8179723-4f23-4df3-9e1b-0d00c9dfd354")]
        public string ContactAddInfo
        {
            get { return repo.ContactAddInfo; }
            set { repo.ContactAddInfo = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable ContactState.
        /// </summary>
        [TestVariable("54c74ddc-9932-484a-920a-e1ba74fa3f5b")]
        public string ContactState
        {
            get { return repo.ContactState; }
            set { repo.ContactState = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ReactTabsTabList1.Contacts' at 27;12.", repo.ApplicationUnderTest.ReactTabsTabList1.ContactsInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.ReactTabsTabList1.Contacts.Click("27;12");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddContact' at 76;20.", repo.ApplicationUnderTest.AddContactInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.AddContact.Click("76;20");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CssKynsejIndicatorContainerMfcSelect' at Center.", repo.ApplicationUnderTest.CssKynsejIndicatorContainerMfcSelectInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.CssKynsejIndicatorContainerMfcSelect.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Relationship' at Center.", repo.ApplicationUnderTest.RelationshipInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.Relationship.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.InputTagSsn' at Center.", repo.ApplicationUnderTest.InputTagSsnInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.InputTagSsn.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactSSN' with focus on 'ApplicationUnderTest.InputTagSsn'.", repo.ApplicationUnderTest.InputTagSsnInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.InputTagSsn.PressKeys(ContactSSN);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FirstName1' at Center.", repo.ApplicationUnderTest.FirstName1Info, new RecordItemIndex(6));
            repo.ApplicationUnderTest.FirstName1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactFirstName' with focus on 'ApplicationUnderTest.FirstName1'.", repo.ApplicationUnderTest.FirstName1Info, new RecordItemIndex(7));
            repo.ApplicationUnderTest.FirstName1.PressKeys(ContactFirstName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.MiddleName2' at Center.", repo.ApplicationUnderTest.MiddleName2Info, new RecordItemIndex(8));
            repo.ApplicationUnderTest.MiddleName2.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactMiddleName' with focus on 'ApplicationUnderTest.MiddleName2'.", repo.ApplicationUnderTest.MiddleName2Info, new RecordItemIndex(9));
            repo.ApplicationUnderTest.MiddleName2.PressKeys(ContactMiddleName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LastName2' at Center.", repo.ApplicationUnderTest.LastName2Info, new RecordItemIndex(10));
            repo.ApplicationUnderTest.LastName2.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactLastName' with focus on 'ApplicationUnderTest.LastName2'.", repo.ApplicationUnderTest.LastName2Info, new RecordItemIndex(11));
            repo.ApplicationUnderTest.LastName2.PressKeys(ContactLastName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FormerName' at Center.", repo.ApplicationUnderTest.FormerNameInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.FormerName.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactFormerName' with focus on 'ApplicationUnderTest.FormerName'.", repo.ApplicationUnderTest.FormerNameInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.FormerName.PressKeys(ContactFormerName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CssKynsejIndicatorContainerMfcSelect1' at Center.", repo.ApplicationUnderTest.CssKynsejIndicatorContainerMfcSelect1Info, new RecordItemIndex(14));
            repo.ApplicationUnderTest.CssKynsejIndicatorContainerMfcSelect1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ContactsSuffix' at Center.", repo.ApplicationUnderTest.ContactsSuffixInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.ContactsSuffix.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FaCaretDownFas3' at Center.", repo.ApplicationUnderTest.FaCaretDownFas3Info, new RecordItemIndex(16));
            repo.ApplicationUnderTest.FaCaretDownFas3.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ContactGender' at Center.", repo.ApplicationUnderTest.ContactGenderInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.ContactGender.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BirthDate1' at Center.", repo.ApplicationUnderTest.BirthDate1Info, new RecordItemIndex(18));
            repo.ApplicationUnderTest.BirthDate1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactDOB' with focus on 'ApplicationUnderTest.BirthDate1'.", repo.ApplicationUnderTest.BirthDate1Info, new RecordItemIndex(19));
            repo.ApplicationUnderTest.BirthDate1.PressKeys(ContactDOB);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.MarriageDate' at Center.", repo.ApplicationUnderTest.MarriageDateInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.MarriageDate.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactMarriageDate' with focus on 'ApplicationUnderTest.MarriageDate'.", repo.ApplicationUnderTest.MarriageDateInfo, new RecordItemIndex(21));
            repo.ApplicationUnderTest.MarriageDate.PressKeys(ContactMarriageDate);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DivorceDate' at Center.", repo.ApplicationUnderTest.DivorceDateInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.DivorceDate.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactDivorceDate' with focus on 'ApplicationUnderTest.DivorceDate'.", repo.ApplicationUnderTest.DivorceDateInfo, new RecordItemIndex(23));
            repo.ApplicationUnderTest.DivorceDate.PressKeys(ContactDivorceDate);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ContactAddinfo' at Center.", repo.ApplicationUnderTest.ContactAddinfoInfo, new RecordItemIndex(24));
            repo.ApplicationUnderTest.ContactAddinfo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ContactAdddiffer' at Center.", repo.ApplicationUnderTest.ContactAdddifferInfo, new RecordItemIndex(25));
            repo.ApplicationUnderTest.ContactAdddiffer.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ContactAddone' at Center.", repo.ApplicationUnderTest.ContactAddoneInfo, new RecordItemIndex(26));
            repo.ApplicationUnderTest.ContactAddone.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactAddOne' with focus on 'ApplicationUnderTest.ContactAddone'.", repo.ApplicationUnderTest.ContactAddoneInfo, new RecordItemIndex(27));
            repo.ApplicationUnderTest.ContactAddone.PressKeys(ContactAddOne);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ContactAddtwo' at Center.", repo.ApplicationUnderTest.ContactAddtwoInfo, new RecordItemIndex(28));
            repo.ApplicationUnderTest.ContactAddtwo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactAddTwo' with focus on 'ApplicationUnderTest.ContactAddtwo'.", repo.ApplicationUnderTest.ContactAddtwoInfo, new RecordItemIndex(29));
            repo.ApplicationUnderTest.ContactAddtwo.PressKeys(ContactAddTwo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CITY3' at Center.", repo.ApplicationUnderTest.CITY3Info, new RecordItemIndex(30));
            repo.ApplicationUnderTest.CITY3.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactCity' with focus on 'ApplicationUnderTest.CITY3'.", repo.ApplicationUnderTest.CITY3Info, new RecordItemIndex(31));
            repo.ApplicationUnderTest.CITY3.PressKeys(ContactCity);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CssKynsejIndicatorContainerMfcSelect2' at Center.", repo.ApplicationUnderTest.CssKynsejIndicatorContainerMfcSelect2Info, new RecordItemIndex(32));
            repo.ApplicationUnderTest.CssKynsejIndicatorContainerMfcSelect2.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ContactState' at Center.", repo.ApplicationUnderTest.ContactStateInfo, new RecordItemIndex(33));
            repo.ApplicationUnderTest.ContactState.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.InputTagZIP' at Center.", repo.ApplicationUnderTest.InputTagZIPInfo, new RecordItemIndex(34));
            repo.ApplicationUnderTest.InputTagZIP.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactZip' with focus on 'ApplicationUnderTest.InputTagZIP'.", repo.ApplicationUnderTest.InputTagZIPInfo, new RecordItemIndex(35));
            repo.ApplicationUnderTest.InputTagZIP.PressKeys(ContactZip);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePhone1' at Center.", repo.ApplicationUnderTest.HomePhone1Info, new RecordItemIndex(36));
            repo.ApplicationUnderTest.HomePhone1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactHomePhone' with focus on 'ApplicationUnderTest.HomePhone1'.", repo.ApplicationUnderTest.HomePhone1Info, new RecordItemIndex(37));
            repo.ApplicationUnderTest.HomePhone1.PressKeys(ContactHomePhone);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ContactWorkPhone' at Center.", repo.ApplicationUnderTest.ContactWorkPhoneInfo, new RecordItemIndex(38));
            repo.ApplicationUnderTest.ContactWorkPhone.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactWorkPhone' with focus on 'ApplicationUnderTest.ContactWorkPhone'.", repo.ApplicationUnderTest.ContactWorkPhoneInfo, new RecordItemIndex(39));
            repo.ApplicationUnderTest.ContactWorkPhone.PressKeys(ContactWorkPhone);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.WorkExt' at Center.", repo.ApplicationUnderTest.WorkExtInfo, new RecordItemIndex(40));
            repo.ApplicationUnderTest.WorkExt.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactWorkExt' with focus on 'ApplicationUnderTest.WorkExt'.", repo.ApplicationUnderTest.WorkExtInfo, new RecordItemIndex(41));
            repo.ApplicationUnderTest.WorkExt.PressKeys(ContactWorkExt);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ContactOtherPhone' at Center.", repo.ApplicationUnderTest.ContactOtherPhoneInfo, new RecordItemIndex(42));
            repo.ApplicationUnderTest.ContactOtherPhone.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactOtherPhone' with focus on 'ApplicationUnderTest.ContactOtherPhone'.", repo.ApplicationUnderTest.ContactOtherPhoneInfo, new RecordItemIndex(43));
            repo.ApplicationUnderTest.ContactOtherPhone.PressKeys(ContactOtherPhone);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Employer' at Center.", repo.ApplicationUnderTest.EmployerInfo, new RecordItemIndex(44));
            repo.ApplicationUnderTest.Employer.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactEmployer' with focus on 'ApplicationUnderTest.Employer'.", repo.ApplicationUnderTest.EmployerInfo, new RecordItemIndex(45));
            repo.ApplicationUnderTest.Employer.PressKeys(ContactEmployer);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Occupation' at Center.", repo.ApplicationUnderTest.OccupationInfo, new RecordItemIndex(46));
            repo.ApplicationUnderTest.Occupation.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ContactOccupation' with focus on 'ApplicationUnderTest.Occupation'.", repo.ApplicationUnderTest.OccupationInfo, new RecordItemIndex(47));
            repo.ApplicationUnderTest.Occupation.PressKeys(ContactOccupation);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='False') on item 'ApplicationUnderTest.AddContactBtn'.", repo.ApplicationUnderTest.AddContactBtnInfo, new RecordItemIndex(48));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AddContactBtnInfo, "Enabled", "False");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.IsEmergencyContact' at Center.", repo.ApplicationUnderTest.IsEmergencyContactInfo, new RecordItemIndex(49));
            repo.ApplicationUnderTest.IsEmergencyContact.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'ApplicationUnderTest.AddContactbtnTr'.", repo.ApplicationUnderTest.AddContactbtnTrInfo, new RecordItemIndex(50));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AddContactbtnTrInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddContact2' at Center.", repo.ApplicationUnderTest.AddContact2Info, new RecordItemIndex(51));
            repo.ApplicationUnderTest.AddContact2.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(52));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by -713 units.", new RecordItemIndex(53));
            Mouse.ScrollWheel(-713);
            Delay.Milliseconds(300);
            
            Report.Screenshot(ReportLevel.Info, "User", "Screenshot Taken", repo.ApplicationUnderTest.Self, false, new RecordItemIndex(54));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
