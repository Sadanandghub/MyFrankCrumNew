///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EditPersonalDetails recording.
    /// </summary>
    [TestModule("2ad8a87f-9935-45fb-acc5-a920e77a1dc4", ModuleType.Recording, 1)]
    public partial class EditPersonalDetails : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static EditPersonalDetails instance = new EditPersonalDetails();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EditPersonalDetails()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EditPersonalDetails Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FirstName' at Center.", repo.ApplicationUnderTest.FirstNameInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.FirstName.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to 'Sally' on item 'ApplicationUnderTest.FirstName'.", repo.ApplicationUnderTest.FirstNameInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.FirstName.Element.SetAttributeValue("Value", "Sally");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.MiddleName1' at Center.", repo.ApplicationUnderTest.MiddleName1Info, new RecordItemIndex(2));
            repo.ApplicationUnderTest.MiddleName1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '' on item 'ApplicationUnderTest.MiddleName1'.", repo.ApplicationUnderTest.MiddleName1Info, new RecordItemIndex(3));
            repo.ApplicationUnderTest.MiddleName1.Element.SetAttributeValue("Value", "");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LastName1' at Center.", repo.ApplicationUnderTest.LastName1Info, new RecordItemIndex(4));
            repo.ApplicationUnderTest.LastName1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to 'Apple' on item 'ApplicationUnderTest.LastName1'.", repo.ApplicationUnderTest.LastName1Info, new RecordItemIndex(5));
            repo.ApplicationUnderTest.LastName1.Element.SetAttributeValue("Value", "Apple");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BirthDate1' at Center.", repo.ApplicationUnderTest.BirthDate1Info, new RecordItemIndex(6));
            repo.ApplicationUnderTest.BirthDate1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '05/03/1966' on item 'ApplicationUnderTest.BirthDate1'.", repo.ApplicationUnderTest.BirthDate1Info, new RecordItemIndex(7));
            repo.ApplicationUnderTest.BirthDate1.Element.SetAttributeValue("Value", "05/03/1966");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CssHxuxk6MfcSelectValueContainerM' at Center.", repo.ApplicationUnderTest.CssHxuxk6MfcSelectValueContainerMInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.CssHxuxk6MfcSelectValueContainerM.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'M.D.' with focus on 'ApplicationUnderTest'.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.Self.EnsureVisible();
            Keyboard.Press("M.D.");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest'.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.Self.EnsureVisible();
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CssHxuxk6MfcSelectValueContainerM1' at Center.", repo.ApplicationUnderTest.CssHxuxk6MfcSelectValueContainerM1Info, new RecordItemIndex(11));
            repo.ApplicationUnderTest.CssHxuxk6MfcSelectValueContainerM1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Asian' with focus on 'ApplicationUnderTest'.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.Self.EnsureVisible();
            Keyboard.Press("Asian");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest'.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.Self.EnsureVisible();
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FaCaretDownFas3' at Center.", repo.ApplicationUnderTest.FaCaretDownFas3Info, new RecordItemIndex(14));
            repo.ApplicationUnderTest.FaCaretDownFas3.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Male' at Center.", repo.ApplicationUnderTest.MaleInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.Male.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CssHxuxk6MfcSelectValueContainerM3' at Center.", repo.ApplicationUnderTest.CssHxuxk6MfcSelectValueContainerM3Info, new RecordItemIndex(16));
            repo.ApplicationUnderTest.CssHxuxk6MfcSelectValueContainerM3.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'married' with focus on 'ApplicationUnderTest'.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.Self.EnsureVisible();
            Keyboard.Press("married");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest'.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(18));
            repo.ApplicationUnderTest.Self.EnsureVisible();
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddressLineOne' at Center.", repo.ApplicationUnderTest.AddressLineOneInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.AddressLineOne.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to 'Test Address One' on item 'ApplicationUnderTest.AddressLineOne'.", repo.ApplicationUnderTest.AddressLineOneInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.AddressLineOne.Element.SetAttributeValue("Value", "Test Address One");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(21));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddressLineTwo' at Center.", repo.ApplicationUnderTest.AddressLineTwoInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.AddressLineTwo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to 'Test Address Two' on item 'ApplicationUnderTest.AddressLineTwo'.", repo.ApplicationUnderTest.AddressLineTwoInfo, new RecordItemIndex(23));
            repo.ApplicationUnderTest.AddressLineTwo.Element.SetAttributeValue("Value", "Test Address Two");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(24));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SaveChanges' at Center.", repo.ApplicationUnderTest.SaveChangesInfo, new RecordItemIndex(25));
            repo.ApplicationUnderTest.SaveChanges.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.KeepAsIs' at Center.", repo.ApplicationUnderTest.KeepAsIsInfo, new RecordItemIndex(26));
            repo.ApplicationUnderTest.KeepAsIs.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
