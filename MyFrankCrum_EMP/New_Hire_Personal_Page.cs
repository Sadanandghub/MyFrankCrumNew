///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The New_Hire_Personal_Page recording.
    /// </summary>
    [TestModule("bae6b182-98e7-495b-9b8e-ee90eda1088c", ModuleType.Recording, 1)]
    public partial class New_Hire_Personal_Page : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static New_Hire_Personal_Page instance = new New_Hire_Personal_Page();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public New_Hire_Personal_Page()
        {
            EmployeeFirstName = "Sadanand";
            EmployeeLastName = "Gupta";
            EmployeeAdd1 = "test Address";
            EmployeeMiddleName = "Lalji";
            EmployeeAdd2 = "test address2";
            StateValue = "Florida";
            ZipCode = "33604";
            EmployeeGender = "Female";
            WorkPhone = "45545455454";
            WorkExt = "4545";
            EmployeMobilePhone = "9878787878";
            HomePhone = "67876878844";
            EmployeeHomeEmail = "sadanand@gmail.com";
            EmployeeWorkEmail = "worl@gmail.com";
            MaritalStatusValue = "Married";
            EmployeeCity = "Tampa";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static New_Hire_Personal_Page Instance
        {
            get { return instance; }
        }

#region Variables

        string _EmployeeFirstName;

        /// <summary>
        /// Gets or sets the value of variable EmployeeFirstName.
        /// </summary>
        [TestVariable("ac5ff5d0-11c8-4d09-9ede-d1f98c2907cb")]
        public string EmployeeFirstName
        {
            get { return _EmployeeFirstName; }
            set { _EmployeeFirstName = value; }
        }

        string _EmployeeLastName;

        /// <summary>
        /// Gets or sets the value of variable EmployeeLastName.
        /// </summary>
        [TestVariable("e686e5a1-748b-4049-913d-e505c55e5f07")]
        public string EmployeeLastName
        {
            get { return _EmployeeLastName; }
            set { _EmployeeLastName = value; }
        }

        string _EmployeeAdd1;

        /// <summary>
        /// Gets or sets the value of variable EmployeeAdd1.
        /// </summary>
        [TestVariable("cf910957-6b47-45af-88bd-10d3ed7ac434")]
        public string EmployeeAdd1
        {
            get { return _EmployeeAdd1; }
            set { _EmployeeAdd1 = value; }
        }

        string _EmployeeMiddleName;

        /// <summary>
        /// Gets or sets the value of variable EmployeeMiddleName.
        /// </summary>
        [TestVariable("0b337751-79c4-465a-93dd-65052ffc8b07")]
        public string EmployeeMiddleName
        {
            get { return _EmployeeMiddleName; }
            set { _EmployeeMiddleName = value; }
        }

        string _EmployeeAdd2;

        /// <summary>
        /// Gets or sets the value of variable EmployeeAdd2.
        /// </summary>
        [TestVariable("dad5d234-d90c-4037-99c8-2898abcec977")]
        public string EmployeeAdd2
        {
            get { return _EmployeeAdd2; }
            set { _EmployeeAdd2 = value; }
        }

        string _ZipCode;

        /// <summary>
        /// Gets or sets the value of variable ZipCode.
        /// </summary>
        [TestVariable("5fcba3eb-c1ac-43aa-8ac2-d6b905192ce6")]
        public string ZipCode
        {
            get { return _ZipCode; }
            set { _ZipCode = value; }
        }

        string _WorkPhone;

        /// <summary>
        /// Gets or sets the value of variable WorkPhone.
        /// </summary>
        [TestVariable("e4aa2d4c-9433-40a2-b5fa-014967ea49c6")]
        public string WorkPhone
        {
            get { return _WorkPhone; }
            set { _WorkPhone = value; }
        }

        string _WorkExt;

        /// <summary>
        /// Gets or sets the value of variable WorkExt.
        /// </summary>
        [TestVariable("a3746791-28a2-41f6-9dc5-f2e25082603e")]
        public string WorkExt
        {
            get { return _WorkExt; }
            set { _WorkExt = value; }
        }

        string _EmployeMobilePhone;

        /// <summary>
        /// Gets or sets the value of variable EmployeMobilePhone.
        /// </summary>
        [TestVariable("094cac31-e788-409b-b2d0-0cd023f9bc50")]
        public string EmployeMobilePhone
        {
            get { return _EmployeMobilePhone; }
            set { _EmployeMobilePhone = value; }
        }

        string _HomePhone;

        /// <summary>
        /// Gets or sets the value of variable HomePhone.
        /// </summary>
        [TestVariable("6dbbe422-1c50-4624-a2eb-5d2cee754072")]
        public string HomePhone
        {
            get { return _HomePhone; }
            set { _HomePhone = value; }
        }

        string _EmployeeHomeEmail;

        /// <summary>
        /// Gets or sets the value of variable EmployeeHomeEmail.
        /// </summary>
        [TestVariable("ee3aca19-b41d-4f9a-8365-86b2ea91686e")]
        public string EmployeeHomeEmail
        {
            get { return _EmployeeHomeEmail; }
            set { _EmployeeHomeEmail = value; }
        }

        string _EmployeeWorkEmail;

        /// <summary>
        /// Gets or sets the value of variable EmployeeWorkEmail.
        /// </summary>
        [TestVariable("8c83fbc2-64df-4a46-b9a2-39cbce0ae662")]
        public string EmployeeWorkEmail
        {
            get { return _EmployeeWorkEmail; }
            set { _EmployeeWorkEmail = value; }
        }

        string _EmployeeCity;

        /// <summary>
        /// Gets or sets the value of variable EmployeeCity.
        /// </summary>
        [TestVariable("8f33559c-31f1-4592-bea3-5c6f3d520300")]
        public string EmployeeCity
        {
            get { return _EmployeeCity; }
            set { _EmployeeCity = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable RepoURL.
        /// </summary>
        [TestVariable("c75816bd-3150-4b49-aa6d-f8479454f515")]
        public string RepoURL
        {
            get { return repo.RepoURL; }
            set { repo.RepoURL = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable EmployeeSuffix.
        /// </summary>
        [TestVariable("9a0cd24a-f32c-4bca-ba4e-2d85b30a43ab")]
        public string EmployeeSuffix
        {
            get { return repo.EmployeeSuffix; }
            set { repo.EmployeeSuffix = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable StateValue.
        /// </summary>
        [TestVariable("acf97b1e-a151-4584-adca-8d51f688e17a")]
        public string StateValue
        {
            get { return repo.StateValue; }
            set { repo.StateValue = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable EmployeeGender.
        /// </summary>
        [TestVariable("9c0bdf93-ae46-4f05-a8ac-d499cec14383")]
        public string EmployeeGender
        {
            get { return repo.EmployeeGender; }
            set { repo.EmployeeGender = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable EthnicValue.
        /// </summary>
        [TestVariable("bf111322-718e-4488-ac7d-4f8adf865cc9")]
        public string EthnicValue
        {
            get { return repo.EthnicValue; }
            set { repo.EthnicValue = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable MaritalStatusValue.
        /// </summary>
        [TestVariable("e11ac6ee-fdbd-410c-a0b4-446c3719b8f7")]
        public string MaritalStatusValue
        {
            get { return repo.MaritalStatusValue; }
            set { repo.MaritalStatusValue = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "User", "Presonal Tab started", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FirstName2' at Center.", repo.ApplicationUnderTest.FirstName2Info, new RecordItemIndex(1));
            repo.ApplicationUnderTest.FirstName2.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EmployeeFirstName' with focus on 'ApplicationUnderTest.FirstName2'.", repo.ApplicationUnderTest.FirstName2Info, new RecordItemIndex(2));
            repo.ApplicationUnderTest.FirstName2.PressKeys(EmployeeFirstName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.MiddleName3' at 31;20.", repo.ApplicationUnderTest.MiddleName3Info, new RecordItemIndex(3));
            repo.ApplicationUnderTest.MiddleName3.Click("31;20");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EmployeeMiddleName' with focus on 'ApplicationUnderTest.MiddleName3'.", repo.ApplicationUnderTest.MiddleName3Info, new RecordItemIndex(4));
            repo.ApplicationUnderTest.MiddleName3.PressKeys(EmployeeMiddleName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LastName3' at Center.", repo.ApplicationUnderTest.LastName3Info, new RecordItemIndex(5));
            repo.ApplicationUnderTest.LastName3.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EmployeeLastName' with focus on 'ApplicationUnderTest.LastName3'.", repo.ApplicationUnderTest.LastName3Info, new RecordItemIndex(6));
            repo.ApplicationUnderTest.LastName3.PressKeys(EmployeeLastName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddressLine11' at Center.", repo.ApplicationUnderTest.AddressLine11Info, new RecordItemIndex(7));
            repo.ApplicationUnderTest.AddressLine11.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EmployeeAdd1' with focus on 'ApplicationUnderTest.AddressLine11'.", repo.ApplicationUnderTest.AddressLine11Info, new RecordItemIndex(8));
            repo.ApplicationUnderTest.AddressLine11.PressKeys(EmployeeAdd1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddressLine4' at 39;14.", repo.ApplicationUnderTest.AddressLine4Info, new RecordItemIndex(9));
            repo.ApplicationUnderTest.AddressLine4.Click("39;14");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EmployeeAdd2' with focus on 'ApplicationUnderTest.AddressLine4'.", repo.ApplicationUnderTest.AddressLine4Info, new RecordItemIndex(10));
            repo.ApplicationUnderTest.AddressLine4.PressKeys(EmployeeAdd2);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.City2' at Center.", repo.ApplicationUnderTest.City2Info, new RecordItemIndex(11));
            repo.ApplicationUnderTest.City2.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EmployeeCity' with focus on 'ApplicationUnderTest.City2'.", repo.ApplicationUnderTest.City2Info, new RecordItemIndex(12));
            repo.ApplicationUnderTest.City2.PressKeys(EmployeeCity);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EmployeeSuffex' at 7;5.", repo.ApplicationUnderTest.EmployeeSuffexInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.EmployeeSuffex.Click("7;5");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SuffixValue' at 62;16.", repo.ApplicationUnderTest.SuffixValueInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.SuffixValue.Click("62;16");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.State2' at Center.", repo.ApplicationUnderTest.State2Info, new RecordItemIndex(15));
            repo.ApplicationUnderTest.State2.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EmpStateValue' at Center.", repo.ApplicationUnderTest.EmpStateValueInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.EmpStateValue.Click();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Florida{Return}' with focus on 'ApplicationUnderTest.EmpStateValue'.", repo.ApplicationUnderTest.EmpStateValueInfo, new RecordItemIndex(17));
            //repo.ApplicationUnderTest.EmpStateValue.EnsureVisible();
            //Keyboard.Press("Florida{Return}");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ZipCode2' at Center.", repo.ApplicationUnderTest.ZipCode2Info, new RecordItemIndex(18));
            repo.ApplicationUnderTest.ZipCode2.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ZipCode' with focus on 'ApplicationUnderTest.ZipCode2'.", repo.ApplicationUnderTest.ZipCode2Info, new RecordItemIndex(19));
            repo.ApplicationUnderTest.ZipCode2.PressKeys(ZipCode);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Gender2' at Center.", repo.ApplicationUnderTest.Gender2Info, new RecordItemIndex(20));
            repo.ApplicationUnderTest.Gender2.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.GenderValue' at Center.", repo.ApplicationUnderTest.GenderValueInfo, new RecordItemIndex(21));
            repo.ApplicationUnderTest.GenderValue.Click();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Male{Return}' with focus on 'ApplicationUnderTest.Gender2'.", repo.ApplicationUnderTest.Gender2Info, new RecordItemIndex(22));
            //repo.ApplicationUnderTest.Gender2.EnsureVisible();
            //Keyboard.Press("Male{Return}");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(23));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'ApplicationUnderTest.Next1'.", repo.ApplicationUnderTest.Next1Info, new RecordItemIndex(24));
            Validate.AttributeEqual(repo.ApplicationUnderTest.Next1Info, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.WorkPhone1' at 26;22.", repo.ApplicationUnderTest.WorkPhone1Info, new RecordItemIndex(25));
            repo.ApplicationUnderTest.WorkPhone1.Click("26;22");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$WorkPhone' with focus on 'ApplicationUnderTest.WorkPhone1'.", repo.ApplicationUnderTest.WorkPhone1Info, new RecordItemIndex(26));
            repo.ApplicationUnderTest.WorkPhone1.PressKeys(WorkPhone);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.WorkExt' at 53;18.", repo.ApplicationUnderTest.WorkExtInfo, new RecordItemIndex(27));
            repo.ApplicationUnderTest.WorkExt.Click("53;18");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$WorkExt' with focus on 'ApplicationUnderTest.WorkExt'.", repo.ApplicationUnderTest.WorkExtInfo, new RecordItemIndex(28));
            repo.ApplicationUnderTest.WorkExt.PressKeys(WorkExt);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.MobilePhone' at 39;23.", repo.ApplicationUnderTest.MobilePhoneInfo, new RecordItemIndex(29));
            repo.ApplicationUnderTest.MobilePhone.Click("39;23");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EmployeMobilePhone' with focus on 'ApplicationUnderTest.MobilePhone'.", repo.ApplicationUnderTest.MobilePhoneInfo, new RecordItemIndex(30));
            repo.ApplicationUnderTest.MobilePhone.PressKeys(EmployeMobilePhone);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.MaritalStatus1' at Center.", repo.ApplicationUnderTest.MaritalStatus1Info, new RecordItemIndex(31));
            repo.ApplicationUnderTest.MaritalStatus1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(32));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$MaritalStatusValue' with focus on 'ApplicationUnderTest.MaritalStatus1'.", repo.ApplicationUnderTest.MaritalStatus1Info, new RecordItemIndex(33));
            repo.ApplicationUnderTest.MaritalStatus1.PressKeys(MaritalStatusValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.MaritalStatus1'.", repo.ApplicationUnderTest.MaritalStatus1Info, new RecordItemIndex(34));
            repo.ApplicationUnderTest.MaritalStatus1.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ClickEthnicID' at 4;1.", repo.ApplicationUnderTest.ClickEthnicIDInfo, new RecordItemIndex(35));
            repo.ApplicationUnderTest.ClickEthnicID.Click("4;1");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EthnicValue' at 49;18.", repo.ApplicationUnderTest.EthnicValueInfo, new RecordItemIndex(36));
            repo.ApplicationUnderTest.EthnicValue.Click("49;18");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePhone2' at 34;21.", repo.ApplicationUnderTest.HomePhone2Info, new RecordItemIndex(37));
            repo.ApplicationUnderTest.HomePhone2.Click("34;21");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$HomePhone' with focus on 'ApplicationUnderTest.HomePhone2'.", repo.ApplicationUnderTest.HomePhone2Info, new RecordItemIndex(38));
            repo.ApplicationUnderTest.HomePhone2.PressKeys(HomePhone);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EmpHomeEmail' at 25;21.", repo.ApplicationUnderTest.EmpHomeEmailInfo, new RecordItemIndex(39));
            repo.ApplicationUnderTest.EmpHomeEmail.Click("25;21");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EmployeeHomeEmail' with focus on 'ApplicationUnderTest.EmpHomeEmail'.", repo.ApplicationUnderTest.EmpHomeEmailInfo, new RecordItemIndex(40));
            repo.ApplicationUnderTest.EmpHomeEmail.PressKeys(EmployeeHomeEmail);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EmpWorkEmail' at 36;6.", repo.ApplicationUnderTest.EmpWorkEmailInfo, new RecordItemIndex(41));
            repo.ApplicationUnderTest.EmpWorkEmail.Click("36;6");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EmployeeWorkEmail' with focus on 'ApplicationUnderTest.EmpWorkEmail'.", repo.ApplicationUnderTest.EmpWorkEmailInfo, new RecordItemIndex(42));
            repo.ApplicationUnderTest.EmpWorkEmail.PressKeys(EmployeeWorkEmail);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Next1' at Center.", repo.ApplicationUnderTest.Next1Info, new RecordItemIndex(43));
            repo.ApplicationUnderTest.Next1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(44));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.newKeepAsIs' at Center.", repo.ApplicationUnderTest.newKeepAsIsInfo, new RecordItemIndex(45));
            repo.ApplicationUnderTest.newKeepAsIs.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(46));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'ApplicationUnderTest.LiTag3JobPayroll'.", repo.ApplicationUnderTest.LiTag3JobPayrollInfo, new RecordItemIndex(47));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LiTag3JobPayrollInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
