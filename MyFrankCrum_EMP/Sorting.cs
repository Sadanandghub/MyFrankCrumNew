///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Sorting recording.
    /// </summary>
    [TestModule("bf8fc426-e5e8-44cd-9fae-692b0e1c040f", ModuleType.Recording, 1)]
    public partial class Sorting : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static Sorting instance = new Sorting();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Sorting()
        {
            Sortingvalue = "Last Name: A-Z";
            FlexRowValue = "XYZ";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Sorting Instance
        {
            get { return instance; }
        }

#region Variables

        string _FlexRowValue;

        /// <summary>
        /// Gets or sets the value of variable FlexRowValue.
        /// </summary>
        [TestVariable("1676eaeb-a1fc-4763-9ef9-98afdbb89063")]
        public string FlexRowValue
        {
            get { return _FlexRowValue; }
            set { _FlexRowValue = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable RepoURL.
        /// </summary>
        [TestVariable("c75816bd-3150-4b49-aa6d-f8479454f515")]
        public string RepoURL
        {
            get { return repo.RepoURL; }
            set { repo.RepoURL = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Sortingvalue.
        /// </summary>
        [TestVariable("f17c01d4-2115-4a8a-8535-c75aeffd4d53")]
        public string Sortingvalue
        {
            get { return repo.Sortingvalue; }
            set { repo.Sortingvalue = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FaCaretDownFas' at Center.", repo.ApplicationUnderTest.FaCaretDownFasInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.FaCaretDownFas.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Sortingvalue' at Center.", repo.ApplicationUnderTest.SortingvalueInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.Sortingvalue.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FlexRow2' at Center.", repo.ApplicationUnderTest.FlexRow2Info, new RecordItemIndex(2));
            repo.ApplicationUnderTest.FlexRow2.Click();
            Delay.Milliseconds(0);
            
            Get_value_FlexRowName(repo.ApplicationUnderTest.FlexRowNameInfo, Sortingvalue);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "Screenshot Taken", null, false, new RecordItemIndex(4));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
