///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Add_New_Hire_Personal_Tab_Edit recording.
    /// </summary>
    [TestModule("b2cc36d8-e03b-4245-b9b1-d2027f93622e", ModuleType.Recording, 1)]
    public partial class Add_New_Hire_Personal_Tab_Edit : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static Add_New_Hire_Personal_Tab_Edit instance = new Add_New_Hire_Personal_Tab_Edit();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Add_New_Hire_Personal_Tab_Edit()
        {
            EditAddress = "Address two";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Add_New_Hire_Personal_Tab_Edit Instance
        {
            get { return instance; }
        }

#region Variables

        string _EditAddress;

        /// <summary>
        /// Gets or sets the value of variable EditAddress.
        /// </summary>
        [TestVariable("6a47bc71-176a-4dd1-b25c-99bf1f830431")]
        public string EditAddress
        {
            get { return _EditAddress; }
            set { _EditAddress = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable RepoURL.
        /// </summary>
        [TestVariable("c75816bd-3150-4b49-aa6d-f8479454f515")]
        public string RepoURL
        {
            get { return repo.RepoURL; }
            set { repo.RepoURL = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            // Personal Information_Edit
            Report.Log(ReportLevel.Info, "Section", "Personal Information_Edit", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.PersonalEdit' at Center.", repo.ApplicationUnderTest.PersonalEditInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.PersonalEdit.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddressLine11' at Center.", repo.ApplicationUnderTest.AddressLine11Info, new RecordItemIndex(2));
            repo.ApplicationUnderTest.AddressLine11.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$EditAddress' on item 'ApplicationUnderTest.AddressLine11'.", repo.ApplicationUnderTest.AddressLine11Info, new RecordItemIndex(3));
            repo.ApplicationUnderTest.AddressLine11.Element.SetAttributeValue("Value", EditAddress);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.City2' at Center.", repo.ApplicationUnderTest.City2Info, new RecordItemIndex(4));
            //repo.ApplicationUnderTest.City2.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Tampa' with focus on 'ApplicationUnderTest.City2'.", repo.ApplicationUnderTest.City2Info, new RecordItemIndex(5));
            //repo.ApplicationUnderTest.City2.PressKeys("Tampa");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.State2' at Center.", repo.ApplicationUnderTest.State2Info, new RecordItemIndex(6));
            //repo.ApplicationUnderTest.State2.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Florida{Return}' with focus on 'ApplicationUnderTest.State2'.", repo.ApplicationUnderTest.State2Info, new RecordItemIndex(7));
            //repo.ApplicationUnderTest.State2.EnsureVisible();
            //Keyboard.Press("Florida{Return}");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ZipCode2' at Center.", repo.ApplicationUnderTest.ZipCode2Info, new RecordItemIndex(8));
            //repo.ApplicationUnderTest.ZipCode2.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '33604' with focus on 'ApplicationUnderTest.ZipCode2'.", repo.ApplicationUnderTest.ZipCode2Info, new RecordItemIndex(9));
            //repo.ApplicationUnderTest.ZipCode2.PressKeys("33604");
            //Delay.Milliseconds(0);
            
            // End
            Report.Log(ReportLevel.Info, "Section", "End", new RecordItemIndex(10));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.PersonalBackToSummary' at Center.", repo.ApplicationUnderTest.PersonalBackToSummaryInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.PersonalBackToSummary.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.Summary'.", repo.ApplicationUnderTest.SummaryInfo, new RecordItemIndex(12));
            Validate.Exists(repo.ApplicationUnderTest.SummaryInfo);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "Changes to be seen", repo.ApplicationUnderTest.Column, false, new RecordItemIndex(13));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
