///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EESecurityQuestion recording.
    /// </summary>
    [TestModule("e389932c-1a20-467c-8d74-080c270f0446", ModuleType.Recording, 1)]
    public partial class EESecurityQuestion : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static EESecurityQuestion instance = new EESecurityQuestion();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EESecurityQuestion()
        {
            NewQuestion = "umbai";
            ConfirmNewQuestion = "Mumbai";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EESecurityQuestion Instance
        {
            get { return instance; }
        }

#region Variables

        string _NewQuestion;

        /// <summary>
        /// Gets or sets the value of variable NewQuestion.
        /// </summary>
        [TestVariable("8986d103-a867-46fc-b374-d0c83bc41693")]
        public string NewQuestion
        {
            get { return _NewQuestion; }
            set { _NewQuestion = value; }
        }

        string _ConfirmNewQuestion;

        /// <summary>
        /// Gets or sets the value of variable ConfirmNewQuestion.
        /// </summary>
        [TestVariable("45712d54-b611-4306-9b00-036ba9a49cfa")]
        public string ConfirmNewQuestion
        {
            get { return _ConfirmNewQuestion; }
            set { _ConfirmNewQuestion = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable RepoURL.
        /// </summary>
        [TestVariable("c75816bd-3150-4b49-aa6d-f8479454f515")]
        public string RepoURL
        {
            get { return repo.RepoURL; }
            set { repo.RepoURL = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable SecurityQuestion.
        /// </summary>
        [TestVariable("8e108100-ac64-4a1a-9959-e382ca7ed4f9")]
        public string SecurityQuestion
        {
            get { return repo.SecurityQuestion; }
            set { repo.SecurityQuestion = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EditQuestion' at 57;20.", repo.ApplicationUnderTest.EditQuestionInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.EditQuestion.Click("57;20");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(1));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SecurityQuestiontext' at 20;9.", repo.ApplicationUnderTest.SecurityQuestiontextInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.SecurityQuestiontext.Click("20;9");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SecurityQuestionValues' at 88;19.", repo.ApplicationUnderTest.SecurityQuestionValuesInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.SecurityQuestionValues.Click("88;19");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.NewQuestion' at 28;23.", repo.ApplicationUnderTest.NewQuestionInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.NewQuestion.Click("28;23");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NewQuestion' with focus on 'ApplicationUnderTest.NewQuestion'.", repo.ApplicationUnderTest.NewQuestionInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.NewQuestion.PressKeys(NewQuestion);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ConfirmNewQuestion' at 48;19.", repo.ApplicationUnderTest.ConfirmNewQuestionInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.ConfirmNewQuestion.Click("48;19");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ConfirmNewQuestion' with focus on 'ApplicationUnderTest.ConfirmNewQuestion'.", repo.ApplicationUnderTest.ConfirmNewQuestionInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.ConfirmNewQuestion.PressKeys(ConfirmNewQuestion);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ModalWrapper.UpdateSave' at 64;17.", repo.ApplicationUnderTest.ModalWrapper.UpdateSaveInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.ModalWrapper.UpdateSave.Click("64;17");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(9));
            Delay.Duration(5000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "After changed Question screenshot taken", repo.ApplicationUnderTest.Self, false, new RecordItemIndex(10));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
