///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Earnings recording.
    /// </summary>
    [TestModule("1283464a-e97a-4adc-be8e-15c25689c3b3", ModuleType.Recording, 1)]
    public partial class Earnings : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static Earnings instance = new Earnings();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Earnings()
        {
            GetEarningStopDate = "";
            EarningCode = "SALARY-SALF";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Earnings Instance
        {
            get { return instance; }
        }

#region Variables

        string _GetEarningStopDate;

        /// <summary>
        /// Gets or sets the value of variable GetEarningStopDate.
        /// </summary>
        [TestVariable("388b71b2-3a48-4c86-b36c-600e47260b66")]
        public string GetEarningStopDate
        {
            get { return _GetEarningStopDate; }
            set { _GetEarningStopDate = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable RepoURL.
        /// </summary>
        [TestVariable("c75816bd-3150-4b49-aa6d-f8479454f515")]
        public string RepoURL
        {
            get { return repo.RepoURL; }
            set { repo.RepoURL = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable EarningCode.
        /// </summary>
        [TestVariable("f9b509cf-1529-41c8-b025-8d1a61323f7a")]
        public string EarningCode
        {
            get { return repo.EarningCode; }
            set { repo.EarningCode = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Earnings' at Center.", repo.ApplicationUnderTest.EarningsInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.Earnings.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(1));
            Delay.Duration(5000, false);
            
            // Add New Earning
            Report.Log(ReportLevel.Info, "Section", "Add New Earning", new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddNewEarning' at Center.", repo.ApplicationUnderTest.AddNewEarningInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.AddNewEarning.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(4));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CssKynsejIndicatorContainerMfcSelect7' at Center.", repo.ApplicationUnderTest.CssKynsejIndicatorContainerMfcSelect7Info, new RecordItemIndex(5));
            repo.ApplicationUnderTest.CssKynsejIndicatorContainerMfcSelect7.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EarningCodeSelection' at Center.", repo.ApplicationUnderTest.EarningCodeSelectionInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.EarningCodeSelection.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EarningStartDate' at Center.", repo.ApplicationUnderTest.EarningStartDateInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.EarningStartDate.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '04042021' with focus on 'ApplicationUnderTest.EarningStartDate'.", repo.ApplicationUnderTest.EarningStartDateInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.EarningStartDate.PressKeys("04042021");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddModalButtonContainer' at Center.", repo.ApplicationUnderTest.AddModalButtonContainerInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.AddModalButtonContainer.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EarningStopDate' at Center.", repo.ApplicationUnderTest.EarningStopDateInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.EarningStopDate.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '05042021' with focus on 'ApplicationUnderTest.EarningStopDate'.", repo.ApplicationUnderTest.EarningStopDateInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.EarningStopDate.PressKeys("05042021");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'ApplicationUnderTest.ModalButtonContainer' at LowerLeft.", repo.ApplicationUnderTest.ModalButtonContainerInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.ModalButtonContainer.DoubleClick(Location.LowerLeft);
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'ApplicationUnderTest.AddFlatAmount' at Center.", repo.ApplicationUnderTest.AddFlatAmountInfo, new RecordItemIndex(13));
                repo.ApplicationUnderTest.AddFlatAmount.Click();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(13)); }
            
            try {
                Report.Log(ReportLevel.Info, "Keyboard", "(Optional Action)\r\nKey sequence '1200' with focus on 'ApplicationUnderTest.AddFlatAmount'.", repo.ApplicationUnderTest.AddFlatAmountInfo, new RecordItemIndex(14));
                repo.ApplicationUnderTest.AddFlatAmount.PressKeys("1200");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(14)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddEarning' at Center.", repo.ApplicationUnderTest.AddEarningInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.AddEarning.Click();
            Delay.Milliseconds(0);
            
            // Press the Edit link on one of the earnings rows
            Report.Log(ReportLevel.Info, "Section", "Press the Edit link on one of the earnings rows", new RecordItemIndex(16));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EDIT' at .983;.444.", repo.ApplicationUnderTest.EDITInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.EDIT.Click(".983;.444");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EditEarningStopDate' at Center.", repo.ApplicationUnderTest.EditEarningStopDateInfo, new RecordItemIndex(18));
            repo.ApplicationUnderTest.EditEarningStopDate.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.EditEarningStopDate' and assigning its value to variable 'GetEarningStopDate'.", repo.ApplicationUnderTest.EditEarningStopDateInfo, new RecordItemIndex(19));
            GetEarningStopDate = repo.ApplicationUnderTest.EditEarningStopDate.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}' with focus on 'ApplicationUnderTest.EditEarningStopDate'.", repo.ApplicationUnderTest.EditEarningStopDateInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.EditEarningStopDate.PressKeys("{LControlKey down}{Akey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '05/05/2022' with focus on 'ApplicationUnderTest.EditEarningStopDate'.", repo.ApplicationUnderTest.EditEarningStopDateInfo, new RecordItemIndex(21));
            repo.ApplicationUnderTest.EditEarningStopDate.PressKeys("05/05/2022");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EditModalButtonContainer' at Center.", repo.ApplicationUnderTest.EditModalButtonContainerInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.EditModalButtonContainer.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EditEarningUndoChanges' at Center.", repo.ApplicationUnderTest.EditEarningUndoChangesInfo, new RecordItemIndex(23));
            repo.ApplicationUnderTest.EditEarningUndoChanges.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value=$GetEarningStopDate) on item 'ApplicationUnderTest.EditEarningStopDate'.", repo.ApplicationUnderTest.EditEarningStopDateInfo, new RecordItemIndex(24));
            Validate.AttributeEqual(repo.ApplicationUnderTest.EditEarningStopDateInfo, "Value", GetEarningStopDate);
            Delay.Milliseconds(100);
            
            // Change values for the earning code and then press Save Changes
            Report.Log(ReportLevel.Info, "Section", "Change values for the earning code and then press Save Changes", new RecordItemIndex(25));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EditEarningStopDate' at Center.", repo.ApplicationUnderTest.EditEarningStopDateInfo, new RecordItemIndex(26));
            repo.ApplicationUnderTest.EditEarningStopDate.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}' with focus on 'ApplicationUnderTest.EditEarningStopDate'.", repo.ApplicationUnderTest.EditEarningStopDateInfo, new RecordItemIndex(27));
            repo.ApplicationUnderTest.EditEarningStopDate.PressKeys("{LControlKey down}{Akey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '05/05/2022' with focus on 'ApplicationUnderTest.EditEarningStopDate'.", repo.ApplicationUnderTest.EditEarningStopDateInfo, new RecordItemIndex(28));
            repo.ApplicationUnderTest.EditEarningStopDate.PressKeys("05/05/2022");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EditEarningSaveChanges' at Center.", repo.ApplicationUnderTest.EditEarningSaveChangesInfo, new RecordItemIndex(29));
            repo.ApplicationUnderTest.EditEarningSaveChanges.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(30));
            Delay.Duration(5000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "Screenshot Taken", repo.ApplicationUnderTest.Self, false, new RecordItemIndex(31));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
