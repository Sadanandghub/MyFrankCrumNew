///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ResetPasswordcase recording.
    /// </summary>
    [TestModule("fc4b3c2f-cbc9-4470-b5af-74be76d2dfd2", ModuleType.Recording, 1)]
    public partial class ResetPasswordcase : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static ResetPasswordcase instance = new ResetPasswordcase();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ResetPasswordcase()
        {
            SocialSecurityNumber = "743-98-0932";
            DateOfBirth = "05/03/1966";
            EnterYourAnswer = "Blue";
            ResetPassword = "Jhumu@134";
            ConfirmPassword = "jhumu@134";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ResetPasswordcase Instance
        {
            get { return instance; }
        }

#region Variables

        string _SocialSecurityNumber;

        /// <summary>
        /// Gets or sets the value of variable SocialSecurityNumber.
        /// </summary>
        [TestVariable("d03829b8-2d38-4aa6-ba85-de7f8d0a58d0")]
        public string SocialSecurityNumber
        {
            get { return _SocialSecurityNumber; }
            set { _SocialSecurityNumber = value; }
        }

        string _DateOfBirth;

        /// <summary>
        /// Gets or sets the value of variable DateOfBirth.
        /// </summary>
        [TestVariable("ff38bb6e-5e4a-490a-907a-2e94073f6008")]
        public string DateOfBirth
        {
            get { return _DateOfBirth; }
            set { _DateOfBirth = value; }
        }

        string _EnterYourAnswer;

        /// <summary>
        /// Gets or sets the value of variable EnterYourAnswer.
        /// </summary>
        [TestVariable("c06abb00-7569-4c86-8c0b-77087a548391")]
        public string EnterYourAnswer
        {
            get { return _EnterYourAnswer; }
            set { _EnterYourAnswer = value; }
        }

        string _ResetPassword;

        /// <summary>
        /// Gets or sets the value of variable ResetPassword.
        /// </summary>
        [TestVariable("3841365b-1e61-4d01-8724-aabc960d8323")]
        public string ResetPassword
        {
            get { return _ResetPassword; }
            set { _ResetPassword = value; }
        }

        string _ConfirmPassword;

        /// <summary>
        /// Gets or sets the value of variable ConfirmPassword.
        /// </summary>
        [TestVariable("5cb5dfaa-e8f1-434f-80be-ad7035a5c99e")]
        public string ConfirmPassword
        {
            get { return _ConfirmPassword; }
            set { _ConfirmPassword = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable RepoURL.
        /// </summary>
        [TestVariable("c75816bd-3150-4b49-aa6d-f8479454f515")]
        public string RepoURL
        {
            get { return repo.RepoURL; }
            set { repo.RepoURL = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            // Click the "Can't log in? Click here" link..
            Report.Log(ReportLevel.Info, "Section", "Click the \"Can't log in? Click here\" link..", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CantLogInClickHere' at Center.", repo.ApplicationUnderTest.CantLogInClickHereInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.CantLogInClickHere.Click();
            Delay.Milliseconds(0);
            
            // Enter SSN & DOB.
            Report.Log(ReportLevel.Info, "Section", "Enter SSN & DOB.", new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SocialSecurityNumber' at Center.", repo.ApplicationUnderTest.SocialSecurityNumberInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.SocialSecurityNumber.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$SocialSecurityNumber' with focus on 'ApplicationUnderTest.SocialSecurityNumber'.", repo.ApplicationUnderTest.SocialSecurityNumberInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.SocialSecurityNumber.PressKeys(SocialSecurityNumber);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.YourBirthDate' at Center.", repo.ApplicationUnderTest.YourBirthDateInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.YourBirthDate.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DateOfBirth' with focus on 'ApplicationUnderTest.YourBirthDate'.", repo.ApplicationUnderTest.YourBirthDateInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.YourBirthDate.PressKeys(DateOfBirth);
            Delay.Milliseconds(20);
            
            // Click the "Find my Account" button
            Report.Log(ReportLevel.Info, "Section", "Click the \"Find my Account\" button", new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FindMyAccount' at Center.", repo.ApplicationUnderTest.FindMyAccountInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.FindMyAccount.Click();
            Delay.Milliseconds(0);
            
            // Answer the security question.
            Report.Log(ReportLevel.Info, "Section", "Answer the security question.", new RecordItemIndex(9));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.EnterYourAnswer' at Center.", repo.ApplicationUnderTest.EnterYourAnswerInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.EnterYourAnswer.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EnterYourAnswer' with focus on 'ApplicationUnderTest.EnterYourAnswer'.", repo.ApplicationUnderTest.EnterYourAnswerInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.EnterYourAnswer.PressKeys(EnterYourAnswer);
            Delay.Milliseconds(0);
            
            // Click the Answer Question button.
            Report.Log(ReportLevel.Info, "Section", "Click the Answer Question button.", new RecordItemIndex(12));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AnswerQuestion' at Center.", repo.ApplicationUnderTest.AnswerQuestionInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.AnswerQuestion.Click();
            Delay.Milliseconds(0);
            
            // Enter New Password & Verify New Password.
            Report.Log(ReportLevel.Info, "Section", "Enter New Password & Verify New Password.", new RecordItemIndex(14));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.NewPassword' at Center.", repo.ApplicationUnderTest.NewPasswordInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.NewPassword.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ResetPassword' with focus on 'ApplicationUnderTest.NewPassword'.", repo.ApplicationUnderTest.NewPasswordInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.NewPassword.PressKeys(ResetPassword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.VerifyNewPassword' at Center.", repo.ApplicationUnderTest.VerifyNewPasswordInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.VerifyNewPassword.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ConfirmPassword' with focus on 'ApplicationUnderTest.VerifyNewPassword'.", repo.ApplicationUnderTest.VerifyNewPasswordInfo, new RecordItemIndex(18));
            repo.ApplicationUnderTest.VerifyNewPassword.PressKeys(ConfirmPassword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LogIn' at Center.", repo.ApplicationUnderTest.LogInInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.LogIn.Click();
            Delay.Milliseconds(0);
            
            // Home Page Validation
            Report.Log(ReportLevel.Info, "Section", "Home Page Validation", new RecordItemIndex(20));
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'ApplicationUnderTest.Employee' at 42;12.", repo.ApplicationUnderTest.EmployeeInfo, new RecordItemIndex(21));
                repo.ApplicationUnderTest.Employee.Click("42;12");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(21)); }
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 3s.", new RecordItemIndex(22));
                Delay.Duration(3000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(22)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Latest Paycheck (Net Pay):') on item 'ApplicationUnderTest.LatestPaycheckNetPay'.", repo.ApplicationUnderTest.LatestPaycheckNetPayInfo, new RecordItemIndex(23));
                Validate.AttributeEqual(repo.ApplicationUnderTest.LatestPaycheckNetPayInfo, "InnerText", "Latest Paycheck (Net Pay):", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(23)); }
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
