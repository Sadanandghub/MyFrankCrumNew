///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace MyFrankCrum_EMP
{
    public partial class WorkforceOnboarding
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void Validate_SomeFieldSetTag1(RepoItemInfo fieldsettagInfo)
        {
        	if(fieldsettagInfo.Exists()){
        	Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Visible='True') on item 'fieldsettagInfo'.", fieldsettagInfo);
            Validate.AttributeEqual(fieldsettagInfo, "Visible", "True", null, false);
           }
        }
        
        public void Validate_SomeFieldSetTag(RepoItemInfo fieldsettagInfo)
        {
        	if(fieldsettagInfo.Exists()){
            Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Enabled='True') on item 'fieldsettagInfo'.", fieldsettagInfo);
            Validate.AttributeEqual(fieldsettagInfo, "Enabled", "True", null, false);
        	}
        }

        public void NewHireMethod(RepoItemInfo inputtagInfo, RepoItemInfo iframetagInfo)
        {
        	if(inputtagInfo.Exists()){
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'inputtagInfo' at Center.", inputtagInfo);
            inputtagInfo.FindAdapter<InputTag>().Click();
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'iframetagInfo' at Center.", iframetagInfo);
            iframetagInfo.FindAdapter<IFrameTag>().Click();
        	}
        }

        public void NoHireMethod(RepoItemInfo inputtagInfo, RepoItemInfo spantagInfo)
        {
        	if(inputtagInfo.Exists()){
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'inputtagInfo' at Center.", inputtagInfo);
            inputtagInfo.FindAdapter<InputTag>().Click();
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'spantagInfo' at Center.", spantagInfo);
            spantagInfo.FindAdapter<SpanTag>().Click();
        	}
        }
    }
}
