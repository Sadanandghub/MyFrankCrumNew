///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Employee_Document_Upload_InvalidFile recording.
    /// </summary>
    [TestModule("f60b446f-8609-4161-aa3b-d896c75d61be", ModuleType.Recording, 1)]
    public partial class Employee_Document_Upload_InvalidFile : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static Employee_Document_Upload_InvalidFile instance = new Employee_Document_Upload_InvalidFile();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Employee_Document_Upload_InvalidFile()
        {
            InvalidFileUpload = "Repository.postman_collection";
            DocumentName = "DocumentNAme";
            DocumentExpireDate = "08/18/2021";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Employee_Document_Upload_InvalidFile Instance
        {
            get { return instance; }
        }

#region Variables

        string _InvalidFileUpload;

        /// <summary>
        /// Gets or sets the value of variable InvalidFileUpload.
        /// </summary>
        [TestVariable("386fed7f-58ad-4bbc-a2aa-6ffd46037a13")]
        public string InvalidFileUpload
        {
            get { return _InvalidFileUpload; }
            set { _InvalidFileUpload = value; }
        }

        string _DocumentName;

        /// <summary>
        /// Gets or sets the value of variable DocumentName.
        /// </summary>
        [TestVariable("3cbd344a-7bc4-4e55-804d-b2a2f5edb839")]
        public string DocumentName
        {
            get { return _DocumentName; }
            set { _DocumentName = value; }
        }

        string _DocumentExpireDate;

        /// <summary>
        /// Gets or sets the value of variable DocumentExpireDate.
        /// </summary>
        [TestVariable("5c64c734-e312-4487-bdcb-74bb2b5cbc12")]
        public string DocumentExpireDate
        {
            get { return _DocumentExpireDate; }
            set { _DocumentExpireDate = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable RepoURL.
        /// </summary>
        [TestVariable("c75816bd-3150-4b49-aa6d-f8479454f515")]
        public string RepoURL
        {
            get { return repo.RepoURL; }
            set { repo.RepoURL = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DocumentCategoryValue.
        /// </summary>
        [TestVariable("f25e8f2a-0b5c-4fb3-9630-41c8872a54ed")]
        public string DocumentCategoryValue
        {
            get { return repo.DocumentCategoryValue; }
            set { repo.DocumentCategoryValue = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            // Fill out the dialog fields but select an invalid file type and press the Upload button
            Report.Log(ReportLevel.Info, "Section", "Fill out the dialog fields but select an invalid file type and press the Upload button", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Documents' at Center.", repo.ApplicationUnderTest.DocumentsInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.Documents.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(2));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.UploadNewDocument' at Center.", repo.ApplicationUnderTest.UploadNewDocumentInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.UploadNewDocument.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DocumentCategoryDropclick' at Center.", repo.ApplicationUnderTest.DocumentCategoryDropclickInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.DocumentCategoryDropclick.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DocumentCategoryValue' at Center.", repo.ApplicationUnderTest.DocumentCategoryValueInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.DocumentCategoryValue.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DocumentTitleClick' at Center.", repo.ApplicationUnderTest.DocumentTitleClickInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.DocumentTitleClick.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DocumentName' with focus on 'ApplicationUnderTest.DocumentTitleClick'.", repo.ApplicationUnderTest.DocumentTitleClickInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.DocumentTitleClick.PressKeys(DocumentName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DocumentExpiresDate' at Center.", repo.ApplicationUnderTest.DocumentExpiresDateInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.DocumentExpiresDate.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DocumentExpireDate' with focus on 'ApplicationUnderTest.DocumentExpiresDate'.", repo.ApplicationUnderTest.DocumentExpiresDateInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.DocumentExpiresDate.PressKeys(DocumentExpireDate);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DocumentFileEmployeeCanView' at Center.", repo.ApplicationUnderTest.DocumentFileEmployeeCanViewInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.DocumentFileEmployeeCanView.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DocumentChooseFile' at Center.", repo.ApplicationUnderTest.DocumentChooseFileInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.DocumentChooseFile.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Open.Text1148' at Center.", repo.Open.Text1148Info, new RecordItemIndex(12));
            repo.Open.Text1148.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$InvalidFileUpload' with focus on 'Open.Text1148'.", repo.Open.Text1148Info, new RecordItemIndex(13));
            repo.Open.Text1148.PressKeys(InvalidFileUpload);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Open.ButtonOpen' at Center.", repo.Open.ButtonOpenInfo, new RecordItemIndex(14));
            repo.Open.ButtonOpen.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DocumentUpload' at Center.", repo.ApplicationUnderTest.DocumentUploadInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.DocumentUpload.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.AlertErrorErrorSectionWrapper'.", repo.ApplicationUnderTest.AlertErrorErrorSectionWrapperInfo, new RecordItemIndex(16));
            Validate.Exists(repo.ApplicationUnderTest.AlertErrorErrorSectionWrapperInfo);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "Screenshot Taken", repo.ApplicationUnderTest.Self, false, new RecordItemIndex(17));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DeactivatePopupClose' at 18;8.", repo.ApplicationUnderTest.DeactivatePopupCloseInfo, new RecordItemIndex(18));
            repo.ApplicationUnderTest.DeactivatePopupClose.Click("18;8");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
