///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Employee_Document_UploadValidFile recording.
    /// </summary>
    [TestModule("8453b9fa-38f5-422f-a82e-cb31526fda85", ModuleType.Recording, 1)]
    public partial class Employee_Document_UploadValidFile : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static Employee_Document_UploadValidFile instance = new Employee_Document_UploadValidFile();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Employee_Document_UploadValidFile()
        {
            DocumentFilePath = "QDC_FWCI_Q-117097_34823_GL_ACCEPTED03182021_03212321_AM";
            DocumentTitle = "DocumentNAme";
            DocumentExpiresDate = "08/18/2021";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Employee_Document_UploadValidFile Instance
        {
            get { return instance; }
        }

#region Variables

        string _DocumentFilePath;

        /// <summary>
        /// Gets or sets the value of variable DocumentFilePath.
        /// </summary>
        [TestVariable("96c50756-1179-4bd4-8dfc-c2186fcfa87d")]
        public string DocumentFilePath
        {
            get { return _DocumentFilePath; }
            set { _DocumentFilePath = value; }
        }

        string _DocumentTitle;

        /// <summary>
        /// Gets or sets the value of variable DocumentTitle.
        /// </summary>
        [TestVariable("f748e0b7-51d2-46f7-8357-27ae3d3e6a01")]
        public string DocumentTitle
        {
            get { return _DocumentTitle; }
            set { _DocumentTitle = value; }
        }

        string _DocumentExpiresDate;

        /// <summary>
        /// Gets or sets the value of variable DocumentExpiresDate.
        /// </summary>
        [TestVariable("1f329e58-a937-4f4c-bbf0-8dc6d7d680de")]
        public string DocumentExpiresDate
        {
            get { return _DocumentExpiresDate; }
            set { _DocumentExpiresDate = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable RepoURL.
        /// </summary>
        [TestVariable("c75816bd-3150-4b49-aa6d-f8479454f515")]
        public string RepoURL
        {
            get { return repo.RepoURL; }
            set { repo.RepoURL = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DocumentCategoryValue.
        /// </summary>
        [TestVariable("f25e8f2a-0b5c-4fb3-9630-41c8872a54ed")]
        public string DocumentCategoryValue
        {
            get { return repo.DocumentCategoryValue; }
            set { repo.DocumentCategoryValue = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Documents' at Center.", repo.ApplicationUnderTest.DocumentsInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.Documents.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(1));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.UploadNewDocument' at Center.", repo.ApplicationUnderTest.UploadNewDocumentInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.UploadNewDocument.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DocumentCategoryDropclick' at Center.", repo.ApplicationUnderTest.DocumentCategoryDropclickInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.DocumentCategoryDropclick.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DocumentCategoryValue' at Center.", repo.ApplicationUnderTest.DocumentCategoryValueInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.DocumentCategoryValue.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DocumentTitleClick' at Center.", repo.ApplicationUnderTest.DocumentTitleClickInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.DocumentTitleClick.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DocumentTitle' with focus on 'ApplicationUnderTest.DocumentTitleClick'.", repo.ApplicationUnderTest.DocumentTitleClickInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.DocumentTitleClick.PressKeys(DocumentTitle);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DocumentExpiresDate' at Center.", repo.ApplicationUnderTest.DocumentExpiresDateInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.DocumentExpiresDate.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DocumentExpiresDate' with focus on 'ApplicationUnderTest.DocumentExpiresDate'.", repo.ApplicationUnderTest.DocumentExpiresDateInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.DocumentExpiresDate.PressKeys(DocumentExpiresDate);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DocumentFileEmployeeCanView' at Center.", repo.ApplicationUnderTest.DocumentFileEmployeeCanViewInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.DocumentFileEmployeeCanView.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DocumentChooseFile' at Center.", repo.ApplicationUnderTest.DocumentChooseFileInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.DocumentChooseFile.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Open.Text1148' at Center.", repo.Open.Text1148Info, new RecordItemIndex(11));
            repo.Open.Text1148.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DocumentFilePath' with focus on 'Open.Text1148'.", repo.Open.Text1148Info, new RecordItemIndex(12));
            repo.Open.Text1148.PressKeys(DocumentFilePath);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Open.ButtonOpen' at Center.", repo.Open.ButtonOpenInfo, new RecordItemIndex(13));
            repo.Open.ButtonOpen.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DocumentUpload' at Center.", repo.ApplicationUnderTest.DocumentUploadInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.DocumentUpload.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(15));
            Delay.Duration(5000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "Screenshot Taken", repo.ApplicationUnderTest.Self, false, new RecordItemIndex(16));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
