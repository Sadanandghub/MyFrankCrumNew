///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The W2__Docs_MyDocuments recording.
    /// </summary>
    [TestModule("cdc807fa-51c9-468d-98ba-4be35ca5b994", ModuleType.Recording, 1)]
    public partial class W2__Docs_MyDocuments : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static W2__Docs_MyDocuments instance = new W2__Docs_MyDocuments();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public W2__Docs_MyDocuments()
        {
            DocumentFromDate = "08/17/2021";
            DocumentToDate = "08/22/2021";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static W2__Docs_MyDocuments Instance
        {
            get { return instance; }
        }

#region Variables

        string _DocumentFromDate;

        /// <summary>
        /// Gets or sets the value of variable DocumentFromDate.
        /// </summary>
        [TestVariable("68334998-b76b-4ce3-9caf-3ec7cbcf1392")]
        public string DocumentFromDate
        {
            get { return _DocumentFromDate; }
            set { _DocumentFromDate = value; }
        }

        string _DocumentToDate;

        /// <summary>
        /// Gets or sets the value of variable DocumentToDate.
        /// </summary>
        [TestVariable("e55a0a75-311d-4363-aeac-31ac4726652a")]
        public string DocumentToDate
        {
            get { return _DocumentToDate; }
            set { _DocumentToDate = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable RepoURL.
        /// </summary>
        [TestVariable("c75816bd-3150-4b49-aa6d-f8479454f515")]
        public string RepoURL
        {
            get { return repo.RepoURL; }
            set { repo.RepoURL = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.MyDocuments' at 33;8.", repo.ApplicationUnderTest.MyDocumentsInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.MyDocuments.Click("33;8");
            Delay.Milliseconds(0);
            
            // Change the From Date and To Date filter
            Report.Log(ReportLevel.Info, "Section", "Change the From Date and To Date filter", new RecordItemIndex(1));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BalanceViewContainer.Text' at 54;16.", repo.ApplicationUnderTest.BalanceViewContainer.TextInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.BalanceViewContainer.Text.Click("54;16");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DocumentFromDate' with focus on 'ApplicationUnderTest.BalanceViewContainer.Text'.", repo.ApplicationUnderTest.BalanceViewContainer.TextInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.BalanceViewContainer.Text.PressKeys(DocumentFromDate);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Documents1' at 57;19.", repo.ApplicationUnderTest.Documents1Info, new RecordItemIndex(4));
            repo.ApplicationUnderTest.Documents1.Click("57;19");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'ApplicationUnderTest.DocumentsDatetext' at 57;19.", repo.ApplicationUnderTest.DocumentsDatetextInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.DocumentsDatetext.DoubleClick("57;19");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DocumentToDate' with focus on 'ApplicationUnderTest.DocumentsDatetext'.", repo.ApplicationUnderTest.DocumentsDatetextInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.DocumentsDatetext.PressKeys(DocumentToDate);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Documents1' at 57;19.", repo.ApplicationUnderTest.Documents1Info, new RecordItemIndex(7));
            repo.ApplicationUnderTest.Documents1.Click("57;19");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(8));
            Delay.Duration(3000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "After select date screenshot taken", repo.ApplicationUnderTest.Self, false, new RecordItemIndex(9));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
