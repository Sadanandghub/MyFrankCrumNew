///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CreateAccount recording.
    /// </summary>
    [TestModule("5c2ea544-081b-44ea-aa57-26803d93d094", ModuleType.Recording, 1)]
    public partial class CreateAccount : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static CreateAccount instance = new CreateAccount();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CreateAccount()
        {
            SocialSecurityNumber = "456-04-2732";
            DateOfBirth = "12/02/1964";
            NewUserName = "sadanand";
            NewPassword = "Saddu@123";
            NewConfirmPassword = "Saddu@123";
            SecurityAnswer = "Blue";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CreateAccount Instance
        {
            get { return instance; }
        }

#region Variables

        string _SocialSecurityNumber;

        /// <summary>
        /// Gets or sets the value of variable SocialSecurityNumber.
        /// </summary>
        [TestVariable("d5158dd5-a84e-4848-bd1d-943461fdb6da")]
        public string SocialSecurityNumber
        {
            get { return _SocialSecurityNumber; }
            set { _SocialSecurityNumber = value; }
        }

        string _DateOfBirth;

        /// <summary>
        /// Gets or sets the value of variable DateOfBirth.
        /// </summary>
        [TestVariable("18c4e879-2f64-4d49-9fdb-f4076872c48a")]
        public string DateOfBirth
        {
            get { return _DateOfBirth; }
            set { _DateOfBirth = value; }
        }

        string _NewUserName;

        /// <summary>
        /// Gets or sets the value of variable NewUserName.
        /// </summary>
        [TestVariable("e08063ec-908e-40ee-97aa-f78ccdc57b4f")]
        public string NewUserName
        {
            get { return _NewUserName; }
            set { _NewUserName = value; }
        }

        string _NewPassword;

        /// <summary>
        /// Gets or sets the value of variable NewPassword.
        /// </summary>
        [TestVariable("73b4c3a8-ce99-4c31-b854-c64c20c905b6")]
        public string NewPassword
        {
            get { return _NewPassword; }
            set { _NewPassword = value; }
        }

        string _NewConfirmPassword;

        /// <summary>
        /// Gets or sets the value of variable NewConfirmPassword.
        /// </summary>
        [TestVariable("aa78bcf7-57f7-42cd-81c0-194378085b68")]
        public string NewConfirmPassword
        {
            get { return _NewConfirmPassword; }
            set { _NewConfirmPassword = value; }
        }

        string _SecurityAnswer;

        /// <summary>
        /// Gets or sets the value of variable SecurityAnswer.
        /// </summary>
        [TestVariable("74caef4a-581a-4d40-bf64-8a64bf51e039")]
        public string SecurityAnswer
        {
            get { return _SecurityAnswer; }
            set { _SecurityAnswer = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable RepoURL.
        /// </summary>
        [TestVariable("c75816bd-3150-4b49-aa6d-f8479454f515")]
        public string RepoURL
        {
            get { return repo.RepoURL; }
            set { repo.RepoURL = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable SecurityQuestionValue.
        /// </summary>
        [TestVariable("d25ba1d1-9f12-477e-9246-a9d37cb17d82")]
        public string SecurityQuestionValue
        {
            get { return repo.SecurityQuestionValue; }
            set { repo.SecurityQuestionValue = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            // Click the "Can't log in? Click here" link..
            Report.Log(ReportLevel.Info, "Section", "Click the \"Can't log in? Click here\" link..", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CantLogInClickHere' at Center.", repo.ApplicationUnderTest.CantLogInClickHereInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.CantLogInClickHere.Click();
            Delay.Milliseconds(0);
            
            // Enter SSN & DOB.
            Report.Log(ReportLevel.Info, "Section", "Enter SSN & DOB.", new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SocialSecurityNumber' at Center.", repo.ApplicationUnderTest.SocialSecurityNumberInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.SocialSecurityNumber.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$SocialSecurityNumber' with focus on 'ApplicationUnderTest.SocialSecurityNumber'.", repo.ApplicationUnderTest.SocialSecurityNumberInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.SocialSecurityNumber.PressKeys(SocialSecurityNumber);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.YourBirthDate' at Center.", repo.ApplicationUnderTest.YourBirthDateInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.YourBirthDate.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DateOfBirth' with focus on 'ApplicationUnderTest.YourBirthDate'.", repo.ApplicationUnderTest.YourBirthDateInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.YourBirthDate.PressKeys(DateOfBirth);
            Delay.Milliseconds(20);
            
            // Click the "Find my Account" button
            Report.Log(ReportLevel.Info, "Section", "Click the \"Find my Account\" button", new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FindMyAccount' at Center.", repo.ApplicationUnderTest.FindMyAccountInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.FindMyAccount.Click();
            Delay.Milliseconds(0);
            
            // Enter all required fields.
            Report.Log(ReportLevel.Info, "Section", "Enter all required fields.", new RecordItemIndex(9));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Username' at Center.", repo.ApplicationUnderTest.UsernameInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.Username.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NewUserName' with focus on 'ApplicationUnderTest.Username'.", repo.ApplicationUnderTest.UsernameInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.Username.PressKeys(NewUserName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Password1' at Center.", repo.ApplicationUnderTest.Password1Info, new RecordItemIndex(12));
            repo.ApplicationUnderTest.Password1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NewPassword' with focus on 'ApplicationUnderTest.Password1'.", repo.ApplicationUnderTest.Password1Info, new RecordItemIndex(13));
            repo.ApplicationUnderTest.Password1.PressKeys(NewPassword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ConfirmPassword' at Center.", repo.ApplicationUnderTest.ConfirmPasswordInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.ConfirmPassword.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NewConfirmPassword' with focus on 'ApplicationUnderTest.ConfirmPassword'.", repo.ApplicationUnderTest.ConfirmPasswordInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.ConfirmPassword.PressKeys(NewConfirmPassword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SecurityQuestionClick' at Center.", repo.ApplicationUnderTest.SecurityQuestionClickInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.SecurityQuestionClick.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SecurityQuestionValue' at Center.", repo.ApplicationUnderTest.SecurityQuestionValueInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.SecurityQuestionValue.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SecurityAnswer' at Center.", repo.ApplicationUnderTest.SecurityAnswerInfo, new RecordItemIndex(18));
            repo.ApplicationUnderTest.SecurityAnswer.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$SecurityAnswer' with focus on 'ApplicationUnderTest.SecurityAnswer'.", repo.ApplicationUnderTest.SecurityAnswerInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.SecurityAnswer.PressKeys(SecurityAnswer);
            Delay.Milliseconds(0);
            
            // Click the Create my account button.
            Report.Log(ReportLevel.Info, "Section", "Click the Create my account button.", new RecordItemIndex(20));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CreateMyAccount' at Center.", repo.ApplicationUnderTest.CreateMyAccountInfo, new RecordItemIndex(21));
            repo.ApplicationUnderTest.CreateMyAccount.Click();
            Delay.Milliseconds(0);
            
            // Validation Home Page
            Report.Log(ReportLevel.Info, "Section", "Validation Home Page", new RecordItemIndex(22));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Latest Paycheck (Net Pay):') on item 'ApplicationUnderTest.LatestPaycheckNetPay'.", repo.ApplicationUnderTest.LatestPaycheckNetPayInfo, new RecordItemIndex(23));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LatestPaycheckNetPayInfo, "InnerText", "Latest Paycheck (Net Pay):");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
