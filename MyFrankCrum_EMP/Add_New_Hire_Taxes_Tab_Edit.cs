///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFrankCrum_EMP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Add_New_Hire_Taxes_Tab_Edit recording.
    /// </summary>
    [TestModule("fb486293-df82-4342-9a20-784d5c7ca0d8", ModuleType.Recording, 1)]
    public partial class Add_New_Hire_Taxes_Tab_Edit : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFrankCrum_EMPRepository repository.
        /// </summary>
        public static MyFrankCrum_EMPRepository repo = MyFrankCrum_EMPRepository.Instance;

        static Add_New_Hire_Taxes_Tab_Edit instance = new Add_New_Hire_Taxes_Tab_Edit();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Add_New_Hire_Taxes_Tab_Edit()
        {
            EditOtherIncTaxe = "16";
            EditAllowanceExemption = "2345";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Add_New_Hire_Taxes_Tab_Edit Instance
        {
            get { return instance; }
        }

#region Variables

        string _EditOtherIncTaxe;

        /// <summary>
        /// Gets or sets the value of variable EditOtherIncTaxe.
        /// </summary>
        [TestVariable("1a263012-5c8f-44db-8d87-3c83f344d3d1")]
        public string EditOtherIncTaxe
        {
            get { return _EditOtherIncTaxe; }
            set { _EditOtherIncTaxe = value; }
        }

        string _EditAllowanceExemption;

        /// <summary>
        /// Gets or sets the value of variable EditAllowanceExemption.
        /// </summary>
        [TestVariable("31646828-eab3-4c4a-a26b-5b9b9e25c489")]
        public string EditAllowanceExemption
        {
            get { return _EditAllowanceExemption; }
            set { _EditAllowanceExemption = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable RepoURL.
        /// </summary>
        [TestVariable("c75816bd-3150-4b49-aa6d-f8479454f515")]
        public string RepoURL
        {
            get { return repo.RepoURL; }
            set { repo.RepoURL = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.NewTaxesEdit' at 11;10.", repo.ApplicationUnderTest.NewTaxesEditInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.NewTaxesEdit.Click("11;10");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'ApplicationUnderTest.OtherIncome' at 29;18.", repo.ApplicationUnderTest.OtherIncomeInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.OtherIncome.DoubleClick("29;18");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EditOtherIncTaxe' with focus on 'ApplicationUnderTest.OtherIncome'.", repo.ApplicationUnderTest.OtherIncomeInfo, new RecordItemIndex(2));
            //repo.ApplicationUnderTest.OtherIncome.PressKeys(EditOtherIncTaxe);
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EditAllowanceExemption' with focus on 'ApplicationUnderTest.AllowancesExemptions'.", repo.ApplicationUnderTest.AllowancesExemptionsInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.AllowancesExemptions.PressKeys(EditAllowanceExemption);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BackToSummary' at 52;7.", repo.ApplicationUnderTest.BackToSummaryInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.BackToSummary.Click("52;7");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(5));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by -2400 units.", new RecordItemIndex(6));
            Mouse.ScrollWheel(-2400);
            Delay.Milliseconds(300);
            
            Report.Screenshot(ReportLevel.Info, "User", "Screenshot Captured", repo.ApplicationUnderTest.Self, false, new RecordItemIndex(7));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
